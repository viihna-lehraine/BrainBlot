export const blankRequest = {
	headers: {},
	ip: '',
	socket: {
		remoteAddress: '0.0.0.0'
	}
};
export const blankResponse = {
	status(statusCode) {
		console.log(`Status set to: ${statusCode}`);
		return this;
	},
	send(body) {
		console.log(`Response body: ${body}`);
		return this;
	},
	json(body) {
		console.log(`Response JSON: ${JSON.stringify(body)}`);
		return this;
	},
	set(field, value) {
		console.log(`Header set: ${field} = ${value}`);
		return this;
	}
};
export const blankNextFunction = function (error) {
	if (error) {
		console.log(`Next called with error: ${error}`);
	} else {
		console.log('Next function called without error');
	}
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwcmVzcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb25maWcvZXhwcmVzcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQVk7SUFDcEMsT0FBTyxFQUFFLEVBQUU7SUFDWCxFQUFFLEVBQUUsRUFBRTtJQUNOLE1BQU0sRUFBRTtRQUNQLGFBQWEsRUFBRSxTQUFTO0tBQ2Q7Q0FDQSxDQUFDO0FBRWIsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFhO0lBQ3RDLE1BQU0sRUFBRSxVQUFVLFVBQWtCO1FBQ25DLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLFVBQVUsRUFBRSxDQUFDLENBQUM7UUFDNUMsT0FBTyxJQUFnQixDQUFDO0lBQ3pCLENBQUM7SUFDRCxJQUFJLEVBQUUsVUFBVSxJQUFVO1FBQ3pCLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLElBQUksRUFBRSxDQUFDLENBQUM7UUFDdEMsT0FBTyxJQUFnQixDQUFDO0lBQ3pCLENBQUM7SUFDRCxJQUFJLEVBQUUsVUFBVSxJQUFVO1FBQ3pCLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ3RELE9BQU8sSUFBZ0IsQ0FBQztJQUN6QixDQUFDO0lBQ0QsR0FBRyxFQUFFLFVBQVUsS0FBYSxFQUFFLEtBQXlCO1FBQ3RELE9BQU8sQ0FBQyxHQUFHLENBQUMsZUFBZSxLQUFLLE1BQU0sS0FBSyxFQUFFLENBQUMsQ0FBQztRQUMvQyxPQUFPLElBQWdCLENBQUM7SUFDekIsQ0FBQztDQUNzQixDQUFDO0FBRXpCLE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFpQixVQUFVLEtBQVc7SUFDbkUsSUFBSSxLQUFLLEVBQUUsQ0FBQztRQUNYLE9BQU8sQ0FBQyxHQUFHLENBQUMsMkJBQTJCLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDakQsQ0FBQztTQUFNLENBQUM7UUFDUCxPQUFPLENBQUMsR0FBRyxDQUFDLG9DQUFvQyxDQUFDLENBQUM7SUFDbkQsQ0FBQztBQUNGLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlcXVlc3QsIFJlc3BvbnNlLCBOZXh0RnVuY3Rpb24gfSBmcm9tICdleHByZXNzJztcbmltcG9ydCB7IFNvY2tldCB9IGZyb20gJ25ldCc7XG5cbmV4cG9ydCBjb25zdCBibGFua1JlcXVlc3Q6IFJlcXVlc3QgPSB7XG5cdGhlYWRlcnM6IHt9LFxuXHRpcDogJycsXG5cdHNvY2tldDoge1xuXHRcdHJlbW90ZUFkZHJlc3M6ICcwLjAuMC4wJ1xuXHR9IGFzIFNvY2tldFxufSBhcyBSZXF1ZXN0O1xuXG5leHBvcnQgY29uc3QgYmxhbmtSZXNwb25zZTogUmVzcG9uc2UgPSB7XG5cdHN0YXR1czogZnVuY3Rpb24gKHN0YXR1c0NvZGU6IG51bWJlcik6IFJlc3BvbnNlIHtcblx0XHRjb25zb2xlLmxvZyhgU3RhdHVzIHNldCB0bzogJHtzdGF0dXNDb2RlfWApO1xuXHRcdHJldHVybiB0aGlzIGFzIFJlc3BvbnNlO1xuXHR9LFxuXHRzZW5kOiBmdW5jdGlvbiAoYm9keT86IGFueSk6IFJlc3BvbnNlIHtcblx0XHRjb25zb2xlLmxvZyhgUmVzcG9uc2UgYm9keTogJHtib2R5fWApO1xuXHRcdHJldHVybiB0aGlzIGFzIFJlc3BvbnNlO1xuXHR9LFxuXHRqc29uOiBmdW5jdGlvbiAoYm9keT86IGFueSk6IFJlc3BvbnNlIHtcblx0XHRjb25zb2xlLmxvZyhgUmVzcG9uc2UgSlNPTjogJHtKU09OLnN0cmluZ2lmeShib2R5KX1gKTtcblx0XHRyZXR1cm4gdGhpcyBhcyBSZXNwb25zZTtcblx0fSxcblx0c2V0OiBmdW5jdGlvbiAoZmllbGQ6IHN0cmluZywgdmFsdWU/OiBzdHJpbmcgfCBzdHJpbmdbXSk6IFJlc3BvbnNlIHtcblx0XHRjb25zb2xlLmxvZyhgSGVhZGVyIHNldDogJHtmaWVsZH0gPSAke3ZhbHVlfWApO1xuXHRcdHJldHVybiB0aGlzIGFzIFJlc3BvbnNlO1xuXHR9XG59IGFzIHVua25vd24gYXMgUmVzcG9uc2U7XG5cbmV4cG9ydCBjb25zdCBibGFua05leHRGdW5jdGlvbjogTmV4dEZ1bmN0aW9uID0gZnVuY3Rpb24gKGVycm9yPzogYW55KTogdm9pZCB7XG5cdGlmIChlcnJvcikge1xuXHRcdGNvbnNvbGUubG9nKGBOZXh0IGNhbGxlZCB3aXRoIGVycm9yOiAke2Vycm9yfWApO1xuXHR9IGVsc2Uge1xuXHRcdGNvbnNvbGUubG9nKCdOZXh0IGZ1bmN0aW9uIGNhbGxlZCB3aXRob3V0IGVycm9yJyk7XG5cdH1cbn07XG4iXX0=
