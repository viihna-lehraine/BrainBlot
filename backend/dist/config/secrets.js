import { execSync } from 'child_process';
import path from 'path';
import setupLogger from './logger.js';
const __dirname = process.cwd();
const logger = await setupLogger();
function getDirectoryPath() {
	// Return absolute path to secrets.ts
	return path.resolve(__dirname);
}
async function getSecrets() {
	try {
		const secretsPath = path.join(
			getDirectoryPath(),
			'../backend/config/secrets.json.gpg'
		);
		logger.info('Resolved secrets path:', secretsPath);
		const decryptedSecrets = execSync(
			`sops -d --output-type json ${secretsPath}`
		).toString();
		return JSON.parse(decryptedSecrets);
	} catch (err) {
		logger.info('Error retrieving secrets from SOPS: ', err);
		throw err;
	}
}
export default getSecrets;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VjcmV0cy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb25maWcvc2VjcmV0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sSUFBSSxNQUFNLE1BQU0sQ0FBQztBQUN4QixPQUFPLFdBQVcsTUFBTSxVQUFVLENBQUM7QUFFbkMsTUFBTSxTQUFTLEdBQUcsT0FBTyxDQUFDLEdBQUcsRUFBRSxDQUFDO0FBQ2hDLE1BQU0sTUFBTSxHQUFHLE1BQU0sV0FBVyxFQUFFLENBQUM7QUFFbkMsU0FBUyxnQkFBZ0I7SUFDeEIscUNBQXFDO0lBQ3JDLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUNoQyxDQUFDO0FBRUQsS0FBSyxVQUFVLFVBQVU7SUFDeEIsSUFBSSxDQUFDO1FBQ0osTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FDNUIsZ0JBQWdCLEVBQUUsRUFDbEIsb0NBQW9DLENBQ3BDLENBQUM7UUFDRixNQUFNLENBQUMsSUFBSSxDQUFDLHdCQUF3QixFQUFFLFdBQVcsQ0FBQyxDQUFDO1FBQ25ELE1BQU0sZ0JBQWdCLEdBQUcsUUFBUSxDQUNoQyw4QkFBOEIsV0FBVyxFQUFFLENBQzNDLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDYixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUNkLE1BQU0sQ0FBQyxJQUFJLENBQUMsc0NBQXNDLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDekQsTUFBTSxHQUFHLENBQUM7SUFDWCxDQUFDO0FBQ0YsQ0FBQztBQUVELGVBQWUsVUFBVSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZXhlY1N5bmMgfSBmcm9tICdjaGlsZF9wcm9jZXNzJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IHNldHVwTG9nZ2VyIGZyb20gJy4vbG9nZ2VyJztcblxuY29uc3QgX19kaXJuYW1lID0gcHJvY2Vzcy5jd2QoKTtcbmNvbnN0IGxvZ2dlciA9IGF3YWl0IHNldHVwTG9nZ2VyKCk7XG5cbmZ1bmN0aW9uIGdldERpcmVjdG9yeVBhdGgoKSB7XG5cdC8vIFJldHVybiBhYnNvbHV0ZSBwYXRoIHRvIHNlY3JldHMudHNcblx0cmV0dXJuIHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUpO1xufVxuXG5hc3luYyBmdW5jdGlvbiBnZXRTZWNyZXRzKCkge1xuXHR0cnkge1xuXHRcdGNvbnN0IHNlY3JldHNQYXRoID0gcGF0aC5qb2luKFxuXHRcdFx0Z2V0RGlyZWN0b3J5UGF0aCgpLFxuXHRcdFx0Jy4uL2JhY2tlbmQvY29uZmlnL3NlY3JldHMuanNvbi5ncGcnXG5cdFx0KTtcblx0XHRsb2dnZXIuaW5mbygnUmVzb2x2ZWQgc2VjcmV0cyBwYXRoOicsIHNlY3JldHNQYXRoKTtcblx0XHRjb25zdCBkZWNyeXB0ZWRTZWNyZXRzID0gZXhlY1N5bmMoXG5cdFx0XHRgc29wcyAtZCAtLW91dHB1dC10eXBlIGpzb24gJHtzZWNyZXRzUGF0aH1gXG5cdFx0KS50b1N0cmluZygpO1xuXHRcdHJldHVybiBKU09OLnBhcnNlKGRlY3J5cHRlZFNlY3JldHMpO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHRsb2dnZXIuaW5mbygnRXJyb3IgcmV0cmlldmluZyBzZWNyZXRzIGZyb20gU09QUzogJywgZXJyKTtcblx0XHR0aHJvdyBlcnI7XG5cdH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgZ2V0U2VjcmV0cztcbiJdfQ==
