import AppError from '../errors/AppError.mjs';
export function createErrorHandler({ logger, featureFlags }) {
	const ERROR_HANDLER_ENABLED = featureFlags.enableErrorHandlerFlag;
	return function errorHandler(err, req, res, next) {
		if (ERROR_HANDLER_ENABLED) {
			logger.info('Error handler middleware enabled');
			if (err instanceof AppError) {
				// operational, trusted error: send message to client
				logger.error(`Operational error occurred: ${err.message}`);
				res.status(err.statusCode).json({
					status: 'error',
					message: err.message
				});
				next();
			} else {
				// programming or other unknown error: don't leak error details
				logger.error(`Unexpected error occurred: ${err.message}`);
				res.status(500).json({
					status: 'error',
					message: 'Internal server error'
				});
				next();
			}
		} else {
			logger.info('Error handler middleware disabled');
			next();
		}
	};
}
export default createErrorHandler;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3JIYW5kbGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL21pZGRsZXdhcmUvZXJyb3JIYW5kbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sUUFBUSxNQUFNLG9CQUFvQixDQUFDO0FBUzFDLE1BQU0sVUFBVSxrQkFBa0IsQ0FBQyxFQUNsQyxNQUFNLEVBQ04sWUFBWSxFQUNjO0lBQzFCLE1BQU0scUJBQXFCLEdBQUcsWUFBWSxDQUFDLHNCQUFzQixDQUFDO0lBRWxFLE9BQU8sU0FBUyxZQUFZLENBQzNCLEdBQXFCLEVBQ3JCLEdBQVksRUFDWixHQUFhLEVBQ2IsSUFBa0I7UUFFbEIsSUFBSSxxQkFBcUIsRUFBRSxDQUFDO1lBQzNCLE1BQU0sQ0FBQyxJQUFJLENBQUMsa0NBQWtDLENBQUMsQ0FBQztZQUNoRCxJQUFJLEdBQUcsWUFBWSxRQUFRLEVBQUUsQ0FBQztnQkFDN0IscURBQXFEO2dCQUNyRCxNQUFNLENBQUMsS0FBSyxDQUFDLCtCQUErQixHQUFHLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQztnQkFDM0QsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUMsSUFBSSxDQUFDO29CQUMvQixNQUFNLEVBQUUsT0FBTztvQkFDZixPQUFPLEVBQUUsR0FBRyxDQUFDLE9BQU87aUJBQ3BCLENBQUMsQ0FBQztnQkFDSCxJQUFJLEVBQUUsQ0FBQztZQUNSLENBQUM7aUJBQU0sQ0FBQztnQkFDUCwrREFBK0Q7Z0JBQy9ELE1BQU0sQ0FBQyxLQUFLLENBQUMsOEJBQThCLEdBQUcsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO2dCQUMxRCxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQztvQkFDcEIsTUFBTSxFQUFFLE9BQU87b0JBQ2YsT0FBTyxFQUFFLHVCQUF1QjtpQkFDaEMsQ0FBQyxDQUFDO2dCQUNILElBQUksRUFBRSxDQUFDO1lBQ1IsQ0FBQztRQUNGLENBQUM7YUFBTSxDQUFDO1lBQ1AsTUFBTSxDQUFDLElBQUksQ0FBQyxtQ0FBbUMsQ0FBQyxDQUFDO1lBQ2pELElBQUksRUFBRSxDQUFDO1FBQ1IsQ0FBQztJQUNGLENBQUMsQ0FBQztBQUNILENBQUM7QUFFRCxlQUFlLGtCQUFrQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVxdWVzdCwgUmVzcG9uc2UsIE5leHRGdW5jdGlvbiB9IGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IEFwcEVycm9yIGZyb20gJy4uL2Vycm9ycy9BcHBFcnJvcic7XG5cbmludGVyZmFjZSBFcnJvckhhbmRsZXJEZXBlbmRlbmNpZXMge1xuXHRsb2dnZXI6IFJldHVyblR5cGU8dHlwZW9mIGltcG9ydCgnLi4vY29uZmlnL2xvZ2dlcicpLmRlZmF1bHQ+O1xuXHRmZWF0dXJlRmxhZ3M6IFJldHVyblR5cGU8XG5cdFx0dHlwZW9mIGltcG9ydCgnLi4vY29uZmlnL2ZlYXR1cmVGbGFncycpLmdldEZlYXR1cmVGbGFnc1xuXHQ+O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRXJyb3JIYW5kbGVyKHtcblx0bG9nZ2VyLFxuXHRmZWF0dXJlRmxhZ3Ncbn06IEVycm9ySGFuZGxlckRlcGVuZGVuY2llcykge1xuXHRjb25zdCBFUlJPUl9IQU5ETEVSX0VOQUJMRUQgPSBmZWF0dXJlRmxhZ3MuZW5hYmxlRXJyb3JIYW5kbGVyRmxhZztcblxuXHRyZXR1cm4gZnVuY3Rpb24gZXJyb3JIYW5kbGVyKFxuXHRcdGVycjogQXBwRXJyb3IgfCBFcnJvcixcblx0XHRyZXE6IFJlcXVlc3QsXG5cdFx0cmVzOiBSZXNwb25zZSxcblx0XHRuZXh0OiBOZXh0RnVuY3Rpb25cblx0KTogdm9pZCB7XG5cdFx0aWYgKEVSUk9SX0hBTkRMRVJfRU5BQkxFRCkge1xuXHRcdFx0bG9nZ2VyLmluZm8oJ0Vycm9yIGhhbmRsZXIgbWlkZGxld2FyZSBlbmFibGVkJyk7XG5cdFx0XHRpZiAoZXJyIGluc3RhbmNlb2YgQXBwRXJyb3IpIHtcblx0XHRcdFx0Ly8gb3BlcmF0aW9uYWwsIHRydXN0ZWQgZXJyb3I6IHNlbmQgbWVzc2FnZSB0byBjbGllbnRcblx0XHRcdFx0bG9nZ2VyLmVycm9yKGBPcGVyYXRpb25hbCBlcnJvciBvY2N1cnJlZDogJHtlcnIubWVzc2FnZX1gKTtcblx0XHRcdFx0cmVzLnN0YXR1cyhlcnIuc3RhdHVzQ29kZSkuanNvbih7XG5cdFx0XHRcdFx0c3RhdHVzOiAnZXJyb3InLFxuXHRcdFx0XHRcdG1lc3NhZ2U6IGVyci5tZXNzYWdlXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRuZXh0KCk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHQvLyBwcm9ncmFtbWluZyBvciBvdGhlciB1bmtub3duIGVycm9yOiBkb24ndCBsZWFrIGVycm9yIGRldGFpbHNcblx0XHRcdFx0bG9nZ2VyLmVycm9yKGBVbmV4cGVjdGVkIGVycm9yIG9jY3VycmVkOiAke2Vyci5tZXNzYWdlfWApO1xuXHRcdFx0XHRyZXMuc3RhdHVzKDUwMCkuanNvbih7XG5cdFx0XHRcdFx0c3RhdHVzOiAnZXJyb3InLFxuXHRcdFx0XHRcdG1lc3NhZ2U6ICdJbnRlcm5hbCBzZXJ2ZXIgZXJyb3InXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRuZXh0KCk7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdGxvZ2dlci5pbmZvKCdFcnJvciBoYW5kbGVyIG1pZGRsZXdhcmUgZGlzYWJsZWQnKTtcblx0XHRcdG5leHQoKTtcblx0XHR9XG5cdH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUVycm9ySGFuZGxlcjtcbiJdfQ==
