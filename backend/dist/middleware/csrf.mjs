export function createCsrfMiddleware({ featureFlags, logger, csrfProtection }) {
	const CSRF_ENABLED = featureFlags.enableCsrfFlag;
	return function csrfMiddleware(req, res, next) {
		if (CSRF_ENABLED) {
			logger.info('CSRF middleware enabled');
			try {
				// generate and set a CSRF token in the response locals
				res.locals.csrfToken = csrfProtection.create(
					req.sessionID || ''
				);
				// if the request method is not GET, validate the CSRF token
				if (req.method !== 'GET') {
					const token =
						req.body.csrfToken || req.headers['x-xsrf-token'];
					if (
						!token ||
						!csrfProtection.verify(req.sessionID || '', token)
					) {
						res.status(403).send('Invalid CSRF token');
						return;
					}
				}
				next(); // if validation passes, proceed to the next middleware
			} catch (err) {
				next(err); // pass any errors to the error handling middleware
			}
		} else {
			logger.info('CSRF middleware disabled');
			next(); // proceed to the next middleware
		}
	};
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3NyZi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taWRkbGV3YXJlL2NzcmYudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBV0EsTUFBTSxVQUFVLG9CQUFvQixDQUFDLEVBQ3BDLFlBQVksRUFDWixNQUFNLEVBQ04sY0FBYyxFQUNJO0lBQ2xCLE1BQU0sWUFBWSxHQUFHLFlBQVksQ0FBQyxjQUFjLENBQUM7SUFFakQsT0FBTyxTQUFTLGNBQWMsQ0FDN0IsR0FBWSxFQUNaLEdBQWEsRUFDYixJQUFrQjtRQUVsQixJQUFJLFlBQVksRUFBRSxDQUFDO1lBQ2xCLE1BQU0sQ0FBQyxJQUFJLENBQUMseUJBQXlCLENBQUMsQ0FBQztZQUN2QyxJQUFJLENBQUM7Z0JBQ0osdURBQXVEO2dCQUN2RCxHQUFHLENBQUMsTUFBTSxDQUFDLFNBQVMsR0FBRyxjQUFjLENBQUMsTUFBTSxDQUMzQyxHQUFHLENBQUMsU0FBUyxJQUFJLEVBQUUsQ0FDbkIsQ0FBQztnQkFFRiw0REFBNEQ7Z0JBQzVELElBQUksR0FBRyxDQUFDLE1BQU0sS0FBSyxLQUFLLEVBQUUsQ0FBQztvQkFDMUIsTUFBTSxLQUFLLEdBQ1YsR0FBRyxDQUFDLElBQUksQ0FBQyxTQUFTO3dCQUNqQixHQUFHLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBWSxDQUFDO29CQUN6QyxJQUNDLENBQUMsS0FBSzt3QkFDTixDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLFNBQVMsSUFBSSxFQUFFLEVBQUUsS0FBSyxDQUFDLEVBQ2pELENBQUM7d0JBQ0YsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsb0JBQW9CLENBQUMsQ0FBQzt3QkFDM0MsT0FBTztvQkFDUixDQUFDO2dCQUNGLENBQUM7Z0JBQ0QsSUFBSSxFQUFFLENBQUMsQ0FBQyx1REFBdUQ7WUFDaEUsQ0FBQztZQUFDLE9BQU8sR0FBRyxFQUFFLENBQUM7Z0JBQ2QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsbURBQW1EO1lBQy9ELENBQUM7UUFDRixDQUFDO2FBQU0sQ0FBQztZQUNQLE1BQU0sQ0FBQyxJQUFJLENBQUMsMEJBQTBCLENBQUMsQ0FBQztZQUN4QyxJQUFJLEVBQUUsQ0FBQyxDQUFDLGlDQUFpQztRQUMxQyxDQUFDO0lBQ0YsQ0FBQyxDQUFDO0FBQ0gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjc3JmIGZyb20gJ2NzcmYnO1xuaW1wb3J0IHsgUmVxdWVzdCwgUmVzcG9uc2UsIE5leHRGdW5jdGlvbiB9IGZyb20gJ2V4cHJlc3MnO1xuXG5pbnRlcmZhY2UgQ3NyZkRlcGVuZGVuY2llcyB7XG5cdGZlYXR1cmVGbGFnczogUmV0dXJuVHlwZTxcblx0XHR0eXBlb2YgaW1wb3J0KCcuLi9jb25maWcvZmVhdHVyZUZsYWdzJykuZ2V0RmVhdHVyZUZsYWdzXG5cdD47XG5cdGxvZ2dlcjogUmV0dXJuVHlwZTx0eXBlb2YgaW1wb3J0KCcuLi9jb25maWcvbG9nZ2VyJykuZGVmYXVsdD47XG5cdGNzcmZQcm90ZWN0aW9uOiBjc3JmO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ3NyZk1pZGRsZXdhcmUoe1xuXHRmZWF0dXJlRmxhZ3MsXG5cdGxvZ2dlcixcblx0Y3NyZlByb3RlY3Rpb25cbn06IENzcmZEZXBlbmRlbmNpZXMpIHtcblx0Y29uc3QgQ1NSRl9FTkFCTEVEID0gZmVhdHVyZUZsYWdzLmVuYWJsZUNzcmZGbGFnO1xuXG5cdHJldHVybiBmdW5jdGlvbiBjc3JmTWlkZGxld2FyZShcblx0XHRyZXE6IFJlcXVlc3QsXG5cdFx0cmVzOiBSZXNwb25zZSxcblx0XHRuZXh0OiBOZXh0RnVuY3Rpb25cblx0KTogdm9pZCB7XG5cdFx0aWYgKENTUkZfRU5BQkxFRCkge1xuXHRcdFx0bG9nZ2VyLmluZm8oJ0NTUkYgbWlkZGxld2FyZSBlbmFibGVkJyk7XG5cdFx0XHR0cnkge1xuXHRcdFx0XHQvLyBnZW5lcmF0ZSBhbmQgc2V0IGEgQ1NSRiB0b2tlbiBpbiB0aGUgcmVzcG9uc2UgbG9jYWxzXG5cdFx0XHRcdHJlcy5sb2NhbHMuY3NyZlRva2VuID0gY3NyZlByb3RlY3Rpb24uY3JlYXRlKFxuXHRcdFx0XHRcdHJlcS5zZXNzaW9uSUQgfHwgJydcblx0XHRcdFx0KTtcblxuXHRcdFx0XHQvLyBpZiB0aGUgcmVxdWVzdCBtZXRob2QgaXMgbm90IEdFVCwgdmFsaWRhdGUgdGhlIENTUkYgdG9rZW5cblx0XHRcdFx0aWYgKHJlcS5tZXRob2QgIT09ICdHRVQnKSB7XG5cdFx0XHRcdFx0Y29uc3QgdG9rZW4gPVxuXHRcdFx0XHRcdFx0cmVxLmJvZHkuY3NyZlRva2VuIHx8XG5cdFx0XHRcdFx0XHQocmVxLmhlYWRlcnNbJ3gteHNyZi10b2tlbiddIGFzIHN0cmluZyk7XG5cdFx0XHRcdFx0aWYgKFxuXHRcdFx0XHRcdFx0IXRva2VuIHx8XG5cdFx0XHRcdFx0XHQhY3NyZlByb3RlY3Rpb24udmVyaWZ5KHJlcS5zZXNzaW9uSUQgfHwgJycsIHRva2VuKVxuXHRcdFx0XHRcdCkge1xuXHRcdFx0XHRcdFx0cmVzLnN0YXR1cyg0MDMpLnNlbmQoJ0ludmFsaWQgQ1NSRiB0b2tlbicpO1xuXHRcdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRuZXh0KCk7IC8vIGlmIHZhbGlkYXRpb24gcGFzc2VzLCBwcm9jZWVkIHRvIHRoZSBuZXh0IG1pZGRsZXdhcmVcblx0XHRcdH0gY2F0Y2ggKGVycikge1xuXHRcdFx0XHRuZXh0KGVycik7IC8vIHBhc3MgYW55IGVycm9ycyB0byB0aGUgZXJyb3IgaGFuZGxpbmcgbWlkZGxld2FyZVxuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHRsb2dnZXIuaW5mbygnQ1NSRiBtaWRkbGV3YXJlIGRpc2FibGVkJyk7XG5cdFx0XHRuZXh0KCk7IC8vIHByb2NlZWQgdG8gdGhlIG5leHQgbWlkZGxld2FyZVxuXHRcdH1cblx0fTtcbn1cbiJdfQ==
