export function createCsrfMiddleware({ featureFlags, logger, csrfProtection }) {
	const CSRF_ENABLED = featureFlags.enableCsrfFlag;
	return function csrfMiddleware(req, res, next) {
		if (CSRF_ENABLED) {
			logger.info('CSRF middleware enabled');
			try {
				// generate and set a CSRF token in the response locals
				res.locals.csrfToken = csrfProtection.create(
					req.sessionID || ''
				);
				// if the request method is not GET, validate the CSRF token
				if (req.method !== 'GET') {
					const token =
						req.body.csrfToken || req.headers['x-xsrf-token'];
					if (
						!token ||
						!csrfProtection.verify(req.sessionID || '', token)
					) {
						res.status(403).send('Invalid CSRF token');
						return;
					}
				}
				next(); // if validation passes, proceed to the next middleware
			} catch (err) {
				next(err); // pass any errors to the error handling middleware
			}
		} else {
			logger.info('CSRF middleware disabled');
			next(); // proceed to the next middleware
		}
	};
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3NyZi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taWRkbGV3YXJlL2NzcmYudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBV0EsTUFBTSxVQUFVLG9CQUFvQixDQUFDLEVBQ3BDLFlBQVksRUFDWixNQUFNLEVBQ04sY0FBYyxFQUNJO0lBQ2xCLE1BQU0sWUFBWSxHQUFHLFlBQVksQ0FBQyxjQUFjLENBQUM7SUFFakQsT0FBTyxTQUFTLGNBQWMsQ0FDN0IsR0FBWSxFQUNaLEdBQWEsRUFDYixJQUFrQjtRQUVsQixJQUFJLFlBQVksRUFBRSxDQUFDO1lBQ2xCLE1BQU0sQ0FBQyxJQUFJLENBQUMseUJBQXlCLENBQUMsQ0FBQztZQUN2QyxJQUFJLENBQUM7Z0JBQ0osdURBQXVEO2dCQUN2RCxHQUFHLENBQUMsTUFBTSxDQUFDLFNBQVMsR0FBRyxjQUFjLENBQUMsTUFBTSxDQUMzQyxHQUFHLENBQUMsU0FBUyxJQUFJLEVBQUUsQ0FDbkIsQ0FBQztnQkFFRiw0REFBNEQ7Z0JBQzVELElBQUksR0FBRyxDQUFDLE1BQU0sS0FBSyxLQUFLLEVBQUUsQ0FBQztvQkFDMUIsTUFBTSxLQUFLLEdBQ1YsR0FBRyxDQUFDLElBQUksQ0FBQyxTQUFTO3dCQUNqQixHQUFHLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBWSxDQUFDO29CQUN6QyxJQUNDLENBQUMsS0FBSzt3QkFDTixDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLFNBQVMsSUFBSSxFQUFFLEVBQUUsS0FBSyxDQUFDLEVBQ2pELENBQUM7d0JBQ0YsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsb0JBQW9CLENBQUMsQ0FBQzt3QkFDM0MsT0FBTztvQkFDUixDQUFDO2dCQUNGLENBQUM7Z0JBQ0QsSUFBSSxFQUFFLENBQUMsQ0FBQyx1REFBdUQ7WUFDaEUsQ0FBQztZQUFDLE9BQU8sR0FBRyxFQUFFLENBQUM7Z0JBQ2QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsbURBQW1EO1lBQy9ELENBQUM7UUFDRixDQUFDO2FBQU0sQ0FBQztZQUNQLE1BQU0sQ0FBQyxJQUFJLENBQUMsMEJBQTBCLENBQUMsQ0FBQztZQUN4QyxJQUFJLEVBQUUsQ0FBQyxDQUFDLGlDQUFpQztRQUMxQyxDQUFDO0lBQ0YsQ0FBQyxDQUFDO0FBQ0gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjc3JmIGZyb20gJ2NzcmYnO1xuaW1wb3J0IHsgUmVxdWVzdCwgUmVzcG9uc2UsIE5leHRGdW5jdGlvbiB9IGZyb20gJ2V4cHJlc3MnO1xuXG5pbnRlcmZhY2UgQ3NyZkRlcGVuZGVuY2llcyB7XG5cdGZlYXR1cmVGbGFnczogUmV0dXJuVHlwZTxcblx0XHR0eXBlb2YgaW1wb3J0KCcuLi91dGlscy9mZWF0dXJlRmxhZ3MnKS5nZXRGZWF0dXJlRmxhZ3Ncblx0Pjtcblx0bG9nZ2VyOiBSZXR1cm5UeXBlPHR5cGVvZiBpbXBvcnQoJy4uL2NvbmZpZy9sb2dnZXInKS5kZWZhdWx0Pjtcblx0Y3NyZlByb3RlY3Rpb246IGNzcmY7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDc3JmTWlkZGxld2FyZSh7XG5cdGZlYXR1cmVGbGFncyxcblx0bG9nZ2VyLFxuXHRjc3JmUHJvdGVjdGlvblxufTogQ3NyZkRlcGVuZGVuY2llcykge1xuXHRjb25zdCBDU1JGX0VOQUJMRUQgPSBmZWF0dXJlRmxhZ3MuZW5hYmxlQ3NyZkZsYWc7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIGNzcmZNaWRkbGV3YXJlKFxuXHRcdHJlcTogUmVxdWVzdCxcblx0XHRyZXM6IFJlc3BvbnNlLFxuXHRcdG5leHQ6IE5leHRGdW5jdGlvblxuXHQpOiB2b2lkIHtcblx0XHRpZiAoQ1NSRl9FTkFCTEVEKSB7XG5cdFx0XHRsb2dnZXIuaW5mbygnQ1NSRiBtaWRkbGV3YXJlIGVuYWJsZWQnKTtcblx0XHRcdHRyeSB7XG5cdFx0XHRcdC8vIGdlbmVyYXRlIGFuZCBzZXQgYSBDU1JGIHRva2VuIGluIHRoZSByZXNwb25zZSBsb2NhbHNcblx0XHRcdFx0cmVzLmxvY2Fscy5jc3JmVG9rZW4gPSBjc3JmUHJvdGVjdGlvbi5jcmVhdGUoXG5cdFx0XHRcdFx0cmVxLnNlc3Npb25JRCB8fCAnJ1xuXHRcdFx0XHQpO1xuXG5cdFx0XHRcdC8vIGlmIHRoZSByZXF1ZXN0IG1ldGhvZCBpcyBub3QgR0VULCB2YWxpZGF0ZSB0aGUgQ1NSRiB0b2tlblxuXHRcdFx0XHRpZiAocmVxLm1ldGhvZCAhPT0gJ0dFVCcpIHtcblx0XHRcdFx0XHRjb25zdCB0b2tlbiA9XG5cdFx0XHRcdFx0XHRyZXEuYm9keS5jc3JmVG9rZW4gfHxcblx0XHRcdFx0XHRcdChyZXEuaGVhZGVyc1sneC14c3JmLXRva2VuJ10gYXMgc3RyaW5nKTtcblx0XHRcdFx0XHRpZiAoXG5cdFx0XHRcdFx0XHQhdG9rZW4gfHxcblx0XHRcdFx0XHRcdCFjc3JmUHJvdGVjdGlvbi52ZXJpZnkocmVxLnNlc3Npb25JRCB8fCAnJywgdG9rZW4pXG5cdFx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0XHRyZXMuc3RhdHVzKDQwMykuc2VuZCgnSW52YWxpZCBDU1JGIHRva2VuJyk7XG5cdFx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdG5leHQoKTsgLy8gaWYgdmFsaWRhdGlvbiBwYXNzZXMsIHByb2NlZWQgdG8gdGhlIG5leHQgbWlkZGxld2FyZVxuXHRcdFx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0XHRcdG5leHQoZXJyKTsgLy8gcGFzcyBhbnkgZXJyb3JzIHRvIHRoZSBlcnJvciBoYW5kbGluZyBtaWRkbGV3YXJlXG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdGxvZ2dlci5pbmZvKCdDU1JGIG1pZGRsZXdhcmUgZGlzYWJsZWQnKTtcblx0XHRcdG5leHQoKTsgLy8gcHJvY2VlZCB0byB0aGUgbmV4dCBtaWRkbGV3YXJlXG5cdFx0fVxuXHR9O1xufVxuIl19
