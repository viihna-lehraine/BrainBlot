export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"services.js","sourceRoot":"","sources":["../../../src/index/interfaces/services.ts"],"names":[],"mappings":"","sourcesContent":["import type {\n\tApplication,\n\tNextFunction,\n\tRequest,\n\tRequestHandler,\n\tResponse,\n\tRouter\n} from 'express';\nimport { Session } from 'express-session';\nimport type { User } from '../../models/User';\nimport type {\n\tAttestationResult,\n\tFido2AttestationResult,\n\tPublicKeyCredentialCreationOptions,\n\tPublicKeyCredentialRequestOptions\n} from 'fido2-lib';\nimport type { Transporter } from 'nodemailer';\nimport type { InferAttributes, Sequelize, WhereOptions } from 'sequelize';\nimport { Logger as WinstonLogger } from 'winston';\nimport { JwtPayload } from 'jsonwebtoken';\nimport { AppError, ClientError, ErrorClasses } from '../../errors/ErrorClasses';\nimport {\n\tEmailMFAServiceDeps,\n\tPassportAuthMiddlewareServiceDeps\n} from './serviceDeps';\nimport {\n\tBackupCodeInterface,\n\tCacheMetrics,\n\tFidoUserInterface,\n\tRedisMetrics,\n\tTOTPSecretInterface,\n\tYubClientInterface,\n\tYubicoOTPOptionsInterface\n} from './serviceComponents';\nimport { SecretsMap } from './env';\nimport { ModelOperations, UserInstanceInterface } from './models';\nimport { EnvVariableTypes, FeatureFlagTypes } from './env';\nimport { UserAttributesInterface } from './models';\nimport { RedisClientType } from 'redis';\n\nexport interface AccessControlMiddlewareServiceInterface {\n\trestrictTo(...allowedRoles: string[]): RequestHandler;\n\thasPermission(...requiredPermissions: string[]): RequestHandler;\n\tshutdown(): Promise<void>;\n}\n\nexport interface AppLoggerServiceInterface extends WinstonLogger {\n\tgetRedactedLogger(): AppLoggerServiceInterface;\n\tlogDebug(message: string, details?: Record<string, unknown>): void;\n\tlogInfo(message: string, details?: Record<string, unknown>): void;\n\tlogNotice(message: string, details?: Record<string, unknown>): void;\n\tlogWarn(message: string, details?: Record<string, unknown>): void;\n\tlogError(message: string, details?: Record<string, unknown>): void;\n\tlogCritical(message: string, details?: Record<string, unknown>): void;\n\tcleanUpOldLogs(\n\t\tsequelize: Sequelize,\n\t\tretentionPeriodDays?: number\n\t): Promise<void>;\n\tsetAdminId(adminId: number | null): void;\n\tgetErrorDetails(\n\t\tgetCallerInfo: () => string,\n\t\taction: string,\n\t\treq?: Request,\n\t\tuserId?: string | null,\n\t\tadditionalData?: Record<string, unknown>\n\t): Record<string, unknown>;\n\tsetUpSecrets(secrets: VaultServiceInterface): void;\n\tsetErrorHandler(errorHandler: ErrorHandlerServiceInterface): void;\n\tshutdown(): Promise<void>;\n}\n\nexport interface AuthControllerInterface {\n\tinitializeAuthMiddleware(): Promise<void>;\n\tinitializeJWTAuthMiddleware(): RequestHandler;\n\tinitializePassportAuthMiddleware(): RequestHandler;\n\tloginUser(\n\t\temail: string,\n\t\tpassword: string\n\t): Promise<{ success: boolean; token?: string }>;\n\tgenerateResetToken(user: UserInstanceInterface): Promise<string | null>;\n\tvalidateResetToken(\n\t\tuserId: string,\n\t\ttoken: string\n\t): Promise<UserInstanceInterface | null>;\n\tcomparePassword(\n\t\tuser: UserInstanceInterface,\n\t\tpassword: string\n\t): Promise<boolean>;\n\tresetPassword(\n\t\tuser: UserInstanceInterface,\n\t\tnewPassword: string\n\t): Promise<UserInstanceInterface | null>;\n\tenableMfa(userId: string): Promise<boolean>;\n\tdisableMfa(userId: string): Promise<boolean>;\n\trecoverPassword(email: string): Promise<void>;\n\tgenerateEmailMFACode(email: string): Promise<boolean>;\n\tverifyEmailMFACode(email: string, email2FACode: string): Promise<boolean>;\n\tgenerateTOTP(\n\t\tuserId: string\n\t): Promise<{ secret: string; qrCodeUrl: string }>;\n\tverifyTOTP(userId: string, token: string): Promise<boolean>;\n\tshutdown(): Promise<void>;\n}\n\nexport interface BaseRouterInterface {\n\tgetRouter(): Router;\n\tshutdown(): Promise<void>;\n}\n\nexport interface BackupCodeServiceInterface {\n\tgenerateBackupCodes(id: string): Promise<string[]> | string[];\n\tverifyBackupCode(id: string, inputCode: string): Promise<boolean>;\n\tsaveBackupCodesToDatabase(\n\t\tid: string,\n\t\tbackupCodes: BackupCodeInterface[]\n\t): Promise<void>;\n\tgetBackupCodesFromDatabase(\n\t\tid: string\n\t): Promise<BackupCodeInterface[] | undefined>;\n\tupdateBackupCodesInDatabase(\n\t\tid: string,\n\t\tbackupCodes: BackupCodeInterface[]\n\t): Promise<void>;\n\tshutdown(): Promise<void>;\n}\n\nexport interface CacheServiceInterface {\n\tgetCacheMetrics(service: string): CacheMetrics;\n\tgetMemoryCache(\n\t\tservice: string\n\t): Map<string, { value: unknown; expiration: number | undefined }> | null;\n\tget<T>(key: string, service: string): Promise<T | null>;\n\tset<T>(\n\t\tkey: string,\n\t\tvalue: T,\n\t\tservice: string,\n\t\texpirationInSeconds?: number\n\t): Promise<void>;\n\tdel(key: string, service: string): Promise<void>;\n\texists(key: string, service: string): Promise<boolean>;\n\tcleanupExpiredEntries(): void;\n\tflushCache(service: string): Promise<void>;\n\tclearNamespace(service: string): Promise<void>;\n\tcloseConnection(): Promise<void>;\n\tshutdown(): Promise<void>;\n}\n\nexport interface CSRFMiddlewareServiceInterface {\n\tinitializeCSRFMiddleware(): (\n\t\treq: Request,\n\t\tres: Response,\n\t\tnext: NextFunction\n\t) => Promise<void>;\n\tshutdown(): void;\n}\n\nexport interface DatabaseControllerInterface {\n\tinitialize(): Promise<Sequelize>;\n\tgetSequelizeInstance(): Sequelize | null;\n\tclearIdleConnections(): Promise<void>;\n\tgetEntries<T>(Model: ModelOperations<T>): Promise<T[]>;\n\tcreateEntry<T>(Model: ModelOperations<T>, data: T): Promise<T>;\n\tdeleteEntry<T>(Model: ModelOperations<T>, id: number): Promise<boolean>;\n\tcacheData<T>(key: string, data: T, expiration?: number): Promise<void>;\n\tqueryWithCache<T extends object>(\n\t\tquery: string,\n\t\tcacheKey: string,\n\t\texpiration?: number\n\t): Promise<T | null>;\n\tgetCachedData<T>(key: string): Promise<T | null>;\n\tclearCache(key: string): Promise<void>;\n\tgetDatabaseInfo(): Promise<Record<string, unknown>>;\n\tgetDatabaseMetrics(serviceName: string): Promise<Record<string, unknown>>;\n\tshutdown(): Promise<void>;\n}\n\nexport interface EmailMFAServiceInterface {\n\tgenerateEmailMFACode({ bcrypt, jwt }: EmailMFAServiceDeps): Promise<{\n\t\temailMFACode: string;\n\t\temailMFAToken: string;\n\t}>;\n\tverifyEmailMFACode(\n\t\ttoken: string,\n\t\temailMFACode: string,\n\t\tjwt: EmailMFAServiceDeps['jwt']\n\t): Promise<boolean>;\n\tshutdown(): Promise<void>;\n}\n\nexport interface EnvConfigServiceInterface {\n\tgetEnvVariable<K extends keyof EnvVariableTypes>(\n\t\tkey: K\n\t): EnvVariableTypes[K];\n\tgetFeatureFlags(): FeatureFlagTypes;\n\tshutdown(): Promise<void>;\n}\n\nexport interface ErrorLoggerServiceInterface extends AppLoggerServiceInterface {\n\tlogAppError(\n\t\terror: Error,\n\t\tsequelize?: Sequelize,\n\t\tdetails?: Record<string, unknown>\n\t): void;\n\tlogToDatabase(\n\t\terror: Error,\n\t\tsequelize: Sequelize,\n\t\tretryCount?: number\n\t): Promise<void>;\n\tgetErrorCount(errorName: string): number;\n}\n\nexport interface ErrorHandlerServiceInterface {\n\tErrorClasses: typeof ErrorClasses;\n\tErrorSeverity: typeof import('../../errors/ErrorClasses').ErrorSeverity;\n\thandleError(params: {\n\t\terror: unknown;\n\t\treq?: Request;\n\t\tdetails?: Record<string, unknown>;\n\t\tseverity?: import('../../errors/ErrorClasses').ErrorSeverityType;\n\t\taction?: string;\n\t\tuserId?: string;\n\t\tsequelize?: Sequelize;\n\t}): void;\n\texpressErrorHandler(): (\n\t\terr: AppError | ClientError | Error | Record<string, unknown>,\n\t\treq: Request,\n\t\tres: Response,\n\t\tnext: NextFunction\n\t) => void;\n\thandleCriticalError(params: {\n\t\terror: unknown;\n\t\treq?: Request;\n\t\tdetails?: Record<string, unknown>;\n\t}): void;\n\tsendClientErrorResponse(params: {\n\t\tmessage: string;\n\t\tstatusCode?: number;\n\t\tres: Response;\n\t\tresponseId?: string;\n\t}): Promise<void>;\n\tinitializeGlobalErrorHandlers(): void;\n\tsetShutdownHandler(shutdownFn: () => Promise<void>): void;\n\tshutdown(): Promise<void>;\n}\n\nexport interface FIDO2ServiceInterface {\n\tinitializeFIDO2Service(): Promise<void>;\n\tgenerateFIDO2RegistrationOptions(\n\t\tuser: FidoUserInterface\n\t): Promise<PublicKeyCredentialCreationOptions>;\n\tverifyFIDO2Registration(\n\t\tattestation: AttestationResult,\n\t\texpectedChallenge: string\n\t): Promise<Fido2AttestationResult>;\n\tgenerateFIDO2AuthenticationOptions(\n\t\tuser: FidoUserInterface\n\t): Promise<PublicKeyCredentialRequestOptions>;\n\tinvalidateFido2Cache(userId: string, action: string): Promise<void>;\n\tshutdown(): Promise<void>;\n}\n\nexport interface GatekeeperServiceInterface {\n\tinitialize(): Promise<void>;\n\trateLimitMiddleware(): (\n\t\treq: Request,\n\t\tres: Response,\n\t\tnext: NextFunction\n\t) => Promise<void>;\n\tslowdownMiddleware(): (\n\t\treq: Request & { session: Session & { lastRequestTime?: number } },\n\t\tres: Response,\n\t\tnext: NextFunction\n\t) => void;\n\tthrottleRequests(): (\n\t\treq: Request,\n\t\tres: Response,\n\t\tnext: NextFunction\n\t) => Promise<void | Response>;\n\tipBlacklistMiddleware(): (\n\t\treq: Request,\n\t\tres: Response,\n\t\tnext: NextFunction\n\t) => Promise<void>;\n\taddIpToBlacklist(ip: string): Promise<void>;\n\tremoveIpFromBlacklist(ip: string): Promise<void>;\n\tpreInitIpBlacklist(): Promise<void>;\n\tloadIpBlacklist(): Promise<void>;\n\ttemporaryBlacklist(ip: string): Promise<void>;\n\tisBlacklisted(ip: string): Promise<boolean>;\n\tisTemporarilyBlacklisted(ip: string): Promise<boolean>;\n\tisBlacklistedOrTemporarilyBlacklisted(ip: string): Promise<{\n\t\tisBlacklisted: boolean;\n\t\tisTemporarilyBlacklisted: boolean;\n\t}>;\n\tdynamicRateLimiter(): Promise<void>;\n\tshutdown(): Promise<void>;\n}\n\nexport interface HealthCheckServiceInterface {\n\tperformHealthCheck(): Promise<Record<string, unknown>>;\n\tshutdown(): Promise<void>;\n}\n\nexport interface HelmetMiddlewareServiceInterface {\n\tinitializeHelmetMiddleware(app: Application): Promise<void>;\n\tapplyHelmet(app: Application): Promise<void>;\n\tapplyCSP(app: Application): Promise<void>;\n\tapplyExpectCT(app: Application): Promise<void>;\n\tapplyReferrerPolicy(app: Application): Promise<void>;\n\tapplyPermissionsPolicy(app: Application): Promise<void>;\n\tapplyXssFilter(app: Application): Promise<void>;\n\thelmetOptions?: typeof import('../../config/middlewareOptions').helmetOptions;\n\tpermissionsPolicyOptions?: {\n\t\t[key: string]: string[];\n\t};\n\tshutdown(): Promise<void>;\n}\n\nexport interface HTTPSServerInterface {\n\tinitialize: () => Promise<void>;\n\tstartServer: () => Promise<void>;\n\tgetHTTPSServerInfo(): Promise<Record<string, unknown>>;\n\tgetHTTPSServerMetrics(\n\t\tserviceName: string\n\t): Promise<Record<string, unknown>>;\n\tshutdownServer: () => Promise<void>;\n}\n\nexport interface JWTAuthMiddlewareServiceInterface {\n\tinitializeJWTAuthMiddleware(): (\n\t\treq: Request,\n\t\tres: Response,\n\t\tnext: NextFunction\n\t) => Promise<void | Response>;\n\tshutdown(): Promise<void>;\n}\n\nexport interface JWTServiceInterface {\n\tgenerateJWT(id: string, username: string): Promise<string>;\n\tverifyJWT(token: string): Promise<string | JwtPayload | null>;\n\tshutdown(): Promise<void>;\n}\n\nexport interface MailerServiceInterface {\n\tgetTransporter(): Promise<Transporter>;\n\tvalidateMailerDependencies(): void;\n\tcreateMailTransporter(): Promise<Transporter>;\n\tshutdown(): Promise<void>;\n}\n\nexport interface MiddlewareStatusServiceInterface {\n\tsetStatus(middlewareName: string, status: 'on' | 'off'): void;\n\tgetStatus(middlewareName: string): 'on' | 'off' | undefined | void;\n\tisMiddlewareOn(middlewareName: string): boolean;\n\tshutdown(): Promise<void>;\n}\n\nexport interface MulterUploadServiceInterface {\n\tsetFileSizeLimit(limit: number): void;\n\tsetAllowedMimeTypes(mimeTypes: string[]): void;\n\tsetAllowedExtensions(extensions: string[]): void;\n\tcreateMulterUpload(\n\t\tvalidationCallback?: (file: Express.Multer.File) => boolean\n\t): import('multer').Multer | undefined;\n\tonUploadSuccess(callback: (file: Express.Multer.File) => void): void;\n\tshutdown(): void;\n}\n\nexport interface PassportAuthMiddlewareServiceInterface {\n\tinitializePassportAuthMiddleware({\n\t\tpassport,\n\t\tauthenticateOptions,\n\t\tvalidateDependencies\n\t}: PassportAuthMiddlewareServiceDeps): RequestHandler;\n\tshutdown(): Promise<void>;\n}\nexport interface PassportServiceInterface {\n\tconfigurePassport(\n\t\tpassport: import('passport').PassportStatic,\n\t\tUserModel: typeof import('../../models/User').User\n\t): Promise<void>;\n\tshutdown(): Promise<void>;\n}\n\nexport interface PasswordServiceInterface {\n\thashPassword(password: string, pepper: string): Promise<string>;\n\tcomparePassword(\n\t\tstoredPassword: string,\n\t\tprovidedPassword: string,\n\t\tpepper: string\n\t): Promise<boolean>;\n\tshutdown(): Promise<void>;\n}\n\nexport interface RedisServiceInterface {\n\tgetRedisClient(): Promise<RedisClientType | null>;\n\tget<T>(key: string): Promise<T | null>;\n\tset<T>(key: string, value: T, expiration?: number): Promise<void>;\n\tdel(key: string): Promise<void>;\n\texists(key: string): Promise<boolean>;\n\tincrement(key: string, expiration?: number): Promise<number | null>;\n\tflushRedisMemoryCache(): Promise<void>;\n\tcleanUpRedisClient(): Promise<void>;\n\tdelMultiple(service: string, keys: string[]): Promise<void>;\n\tgetKeysByPattern(pattern: string): Promise<string[]>;\n\tflushCacheByService(service: string): Promise<void>;\n\tgetRedisInfo(): Promise<RedisMetrics>;\n\tshutdown(): Promise<void>;\n}\n\nexport interface ResourceManagerInterface {\n\tgetCpuUsage(): Array<{ core: number; usage: string }>;\n\tgetMemoryUsage(): {\n\t\theapUsed: number;\n\t\theapTotal: number;\n\t\theapUsedPercentage: number;\n\t\tmemoryLimit: number;\n\t\tisMemoryHealthy: boolean;\n\t};\n\tgetDiskUsage(): Promise<Record<string, unknown>>;\n\tgetNetworkUsage(): Record<string, unknown>[];\n\tadjustResources(): void;\n\tclearCaches(service: string): Promise<void>;\n\tevictCacheEntries(service: string): void;\n\tcloseIdleConnections(): Promise<void>;\n\tsaveToCache<T>(\n\t\tkey: string,\n\t\tvalue: T,\n\t\tservice: string,\n\t\texpiration: number\n\t): Promise<void>;\n\tgetFromCache<T>(key: string, service: string): Promise<T | null>;\n\tshutdown(): Promise<void>;\n}\n\nexport interface RootMiddlewareServiceInterface {\n\tinitialize(): Promise<void>;\n\ttrackResponseTime(req: Request, res: Response, next: NextFunction): void;\n\tcalculateRequestsPerSecond(): void;\n\tshutdown(): Promise<void>;\n\tgetAverageResponseTime(): number;\n}\n\nexport interface StaticRouterInterface {\n\tinitializeStaticRouter(): Promise<void>;\n\tserveNotFoundPage(\n\t\treq: Request,\n\t\tres: Response,\n\t\tnext: NextFunction\n\t): Promise<void>;\n}\n\nexport interface TOTPServiceInterface {\n\tgenerateTOTPSecret(): TOTPSecretInterface;\n\tgenerateTOTPToken(secret: string): Promise<string>;\n\tverifyTOTPToken(secret: string, token: string): boolean;\n\tgenerateQRCode(otpauth_url: string): Promise<string>;\n\tshutdown(): Promise<void>;\n}\n\nexport interface UserControllerInterface {\n\tfindOne(\n\t\tcriteria: WhereOptions<InferAttributes<User>>\n\t): Promise<UserInstanceInterface | null>;\n\tfindUserByEmail(email: string): Promise<UserInstanceInterface | null>;\n\tfindUserById(userId: string): Promise<UserInstanceInterface | null>;\n\tcreateUser(\n\t\tuserDetails: Omit<UserAttributesInterface, 'id' | 'creationDate'>\n\t): Promise<UserInstanceInterface | null>;\n\tupdateUser(\n\t\tuser: UserInstanceInterface,\n\t\tupdatedDetails: Partial<UserInstanceInterface>\n\t): Promise<UserInstanceInterface | null>;\n\tdeleteUser(userId: string): Promise<boolean>;\n\tverifyUserAccount(userId: string): Promise<boolean>;\n\tshutdown(): Promise<void>;\n}\n\nexport interface VaultServiceInterface {\n\tstoreSecret(key: string, secret: string): Promise<void>;\n\tretrieveSecret(\n\t\tkey: keyof SecretsMap,\n\t\tusageCallback: (secret: string) => void\n\t): Promise<string | null>;\n\tretrieveSecrets(\n\t\tsecretKeys: (keyof SecretsMap)[],\n\t\tusageCallback: (secrets: Partial<SecretsMap>) => void\n\t): Promise<Partial<SecretsMap> | null>;\n\tredactSecrets(\n\t\tlogData: string | Record<string, unknown> | unknown[]\n\t): Promise<string | Record<string, unknown> | unknown[]>;\n\tclearExpiredSecretsFromMemory(): void;\n\tclearSecretsFromMemory(secretKeys: string | string[]): void;\n\tbatchClearSecrets(): Promise<void>;\n\tshutdown(): Promise<void>;\n}\n\nexport interface ValidatorServiceInterface {\n\tvalidateEntry(req: Request, res: Response, next: NextFunction): void;\n\tregistrationValidationRules(\n\t\treq: Request,\n\t\tres: Response,\n\t\tnext: NextFunction\n\t): void;\n\thandleValidationErrors(\n\t\treq: Request,\n\t\tres: Response,\n\t\tnext: NextFunction\n\t): Response | void;\n}\n\nexport interface YubicoOTPServiceInterface {\n\tinitializeYubicoOTP(): Promise<void>;\n\tinit(clientId: string, secretKey: string): YubClientInterface;\n\tvalidateYubicoOTP(otp: string): Promise<boolean>;\n\tgenerateYubicoOTPOptions(): Promise<YubicoOTPOptionsInterface>;\n\tshutdown(): Promise<void>;\n}\n"]}
