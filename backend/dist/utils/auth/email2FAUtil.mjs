import bcrypt from 'bcrypt';
import jwt from 'jsonwebtoken';
import setupLogger from '../../config/logger.mjs';
import getSecrets from '../../config/sops.mjs';
const logger = setupLogger();
const secrets = await getSecrets.getSecrets();
if (!secrets) {
	throw new Error('Secrets could not be loaded');
}
async function generateEmail2FACode() {
	const email2FACode = await bcrypt.genSalt(6); // generates a 6-character hex code
	const email2FAToken = jwt.sign({ email2FACode }, secrets.EMAIL_2FA_KEY, {
		expiresIn: '30m'
	});
	return {
		email2FACode, // raw 2FA code
		email2FAToken // JWT containing the 2FA code
	};
}
async function verifyEmail2FACode(token, email2FACode) {
	try {
		const decodedEmail2FACode = jwt.verify(token, secrets.EMAIL_2FA_KEY);
		// ensue the decoded 2FA code matches the one provided
		return decodedEmail2FACode.code === email2FACode;
	} catch (err) {
		logger.error(err);
		return false;
	}
}
export { generateEmail2FACode, verifyEmail2FACode };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW1haWwyRkFVdGlsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWxzL2F1dGgvZW1haWwyRkFVdGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sTUFBTSxNQUFNLFFBQVEsQ0FBQztBQUM1QixPQUFPLEdBQW1CLE1BQU0sY0FBYyxDQUFDO0FBQy9DLE9BQU8sV0FBVyxNQUFNLHFCQUFxQixDQUFDO0FBQzlDLE9BQU8sVUFBVSxNQUFNLG1CQUFtQixDQUFDO0FBTTNDLE1BQU0sTUFBTSxHQUFHLFdBQVcsRUFBRSxDQUFDO0FBQzdCLE1BQU0sT0FBTyxHQUFZLE1BQU0sVUFBVSxDQUFDLFVBQVUsRUFBRSxDQUFDO0FBRXZELElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNkLE1BQU0sSUFBSSxLQUFLLENBQUMsNkJBQTZCLENBQUMsQ0FBQztBQUNoRCxDQUFDO0FBRUQsS0FBSyxVQUFVLG9CQUFvQjtJQUlsQyxNQUFNLFlBQVksR0FBRyxNQUFNLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxtQ0FBbUM7SUFDakYsTUFBTSxhQUFhLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLFlBQVksRUFBRSxFQUFFLE9BQU8sQ0FBQyxhQUFhLEVBQUU7UUFDdkUsU0FBUyxFQUFFLEtBQUs7S0FDaEIsQ0FBQyxDQUFDO0lBQ0gsT0FBTztRQUNOLFlBQVksRUFBRSxlQUFlO1FBQzdCLGFBQWEsQ0FBQyw4QkFBOEI7S0FDNUMsQ0FBQztBQUNILENBQUM7QUFFRCxLQUFLLFVBQVUsa0JBQWtCLENBQ2hDLEtBQWEsRUFDYixZQUFvQjtJQUVwQixJQUFJLENBQUM7UUFDSixNQUFNLG1CQUFtQixHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQ3JDLEtBQUssRUFDTCxPQUFPLENBQUMsYUFBYSxDQUNQLENBQUM7UUFFaEIsc0RBQXNEO1FBQ3RELE9BQU8sbUJBQW1CLENBQUMsSUFBSSxLQUFLLFlBQVksQ0FBQztJQUNsRCxDQUFDO0lBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUNkLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDbEIsT0FBTyxLQUFLLENBQUM7SUFDZCxDQUFDO0FBQ0YsQ0FBQztBQUVELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxrQkFBa0IsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJjcnlwdCBmcm9tICdiY3J5cHQnO1xuaW1wb3J0IGp3dCwgeyBKd3RQYXlsb2FkIH0gZnJvbSAnanNvbndlYnRva2VuJztcbmltcG9ydCBzZXR1cExvZ2dlciBmcm9tICcuLi8uLi9jb25maWcvbG9nZ2VyJztcbmltcG9ydCBnZXRTZWNyZXRzIGZyb20gJy4uLy4uL2NvbmZpZy9zb3BzJztcblxuaW50ZXJmYWNlIFNlY3JldHMge1xuXHRFTUFJTF8yRkFfS0VZOiBzdHJpbmc7XG59XG5cbmNvbnN0IGxvZ2dlciA9IHNldHVwTG9nZ2VyKCk7XG5jb25zdCBzZWNyZXRzOiBTZWNyZXRzID0gYXdhaXQgZ2V0U2VjcmV0cy5nZXRTZWNyZXRzKCk7XG5cbmlmICghc2VjcmV0cykge1xuXHR0aHJvdyBuZXcgRXJyb3IoJ1NlY3JldHMgY291bGQgbm90IGJlIGxvYWRlZCcpO1xufVxuXG5hc3luYyBmdW5jdGlvbiBnZW5lcmF0ZUVtYWlsMkZBQ29kZSgpOiBQcm9taXNlPHtcblx0ZW1haWwyRkFDb2RlOiBzdHJpbmc7XG5cdGVtYWlsMkZBVG9rZW46IHN0cmluZztcbn0+IHtcblx0Y29uc3QgZW1haWwyRkFDb2RlID0gYXdhaXQgYmNyeXB0LmdlblNhbHQoNik7IC8vIGdlbmVyYXRlcyBhIDYtY2hhcmFjdGVyIGhleCBjb2RlXG5cdGNvbnN0IGVtYWlsMkZBVG9rZW4gPSBqd3Quc2lnbih7IGVtYWlsMkZBQ29kZSB9LCBzZWNyZXRzLkVNQUlMXzJGQV9LRVksIHtcblx0XHRleHBpcmVzSW46ICczMG0nXG5cdH0pO1xuXHRyZXR1cm4ge1xuXHRcdGVtYWlsMkZBQ29kZSwgLy8gcmF3IDJGQSBjb2RlXG5cdFx0ZW1haWwyRkFUb2tlbiAvLyBKV1QgY29udGFpbmluZyB0aGUgMkZBIGNvZGVcblx0fTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gdmVyaWZ5RW1haWwyRkFDb2RlKFxuXHR0b2tlbjogc3RyaW5nLFxuXHRlbWFpbDJGQUNvZGU6IHN0cmluZ1xuKTogUHJvbWlzZTxib29sZWFuPiB7XG5cdHRyeSB7XG5cdFx0Y29uc3QgZGVjb2RlZEVtYWlsMkZBQ29kZSA9IGp3dC52ZXJpZnkoXG5cdFx0XHR0b2tlbixcblx0XHRcdHNlY3JldHMuRU1BSUxfMkZBX0tFWVxuXHRcdCkgYXMgSnd0UGF5bG9hZDtcblxuXHRcdC8vIGVuc3VlIHRoZSBkZWNvZGVkIDJGQSBjb2RlIG1hdGNoZXMgdGhlIG9uZSBwcm92aWRlZFxuXHRcdHJldHVybiBkZWNvZGVkRW1haWwyRkFDb2RlLmNvZGUgPT09IGVtYWlsMkZBQ29kZTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0bG9nZ2VyLmVycm9yKGVycik7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbmV4cG9ydCB7IGdlbmVyYXRlRW1haWwyRkFDb2RlLCB2ZXJpZnlFbWFpbDJGQUNvZGUgfTtcbiJdfQ==
