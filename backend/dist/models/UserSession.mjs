import { Model, DataTypes } from 'sequelize';
class UserSession extends Model {
	id;
	sessionId;
	userId;
	ipAddress;
	userAgent;
	createdAt;
	updatedAt;
	expiresAt;
	isActive;
}
export default function createUserSessionModel(sequelize) {
	UserSession.init(
		{
			id: {
				type: DataTypes.STRING,
				allowNull: false,
				primaryKey: true
			},
			sessionId: {
				type: DataTypes.INTEGER,
				allowNull: false,
				autoIncrement: true
			},
			userId: {
				type: DataTypes.STRING,
				allowNull: false
			},
			ipAddress: {
				type: DataTypes.STRING,
				allowNull: false
			},
			userAgent: {
				type: DataTypes.STRING,
				allowNull: false
			},
			createdAt: {
				type: DataTypes.DATE,
				allowNull: false,
				defaultValue: DataTypes.NOW
			},
			updatedAt: {
				type: DataTypes.DATE,
				allowNull: true
			},
			expiresAt: {
				type: DataTypes.DATE,
				allowNull: false
			},
			isActive: {
				type: DataTypes.BOOLEAN,
				allowNull: false,
				defaultValue: true
			}
		},
		{
			sequelize,
			tableName: 'UserSessions',
			timestamps: true,
			updatedAt: 'updatedAt'
		}
	);
	return UserSession;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVXNlclNlc3Npb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbW9kZWxzL1VzZXJTZXNzaW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFJTixLQUFLLEVBQ0wsU0FBUyxFQUVULE1BQU0sV0FBVyxDQUFDO0FBY25CLE1BQU0sV0FDTCxTQUFRLEtBR1A7SUFHRCxFQUFFLENBQVU7SUFDWixTQUFTLENBQVU7SUFDbkIsTUFBTSxDQUFVO0lBQ2hCLFNBQVMsQ0FBVTtJQUNuQixTQUFTLENBQVU7SUFDbkIsU0FBUyxDQUEwQjtJQUNuQyxTQUFTLENBQWU7SUFDeEIsU0FBUyxDQUFRO0lBQ2pCLFFBQVEsQ0FBVztDQUNuQjtBQUVELE1BQU0sQ0FBQyxPQUFPLFVBQVUsc0JBQXNCLENBQzdDLFNBQW9CO0lBRXBCLFdBQVcsQ0FBQyxJQUFJLENBQ2Y7UUFDQyxFQUFFLEVBQUU7WUFDSCxJQUFJLEVBQUUsU0FBUyxDQUFDLE1BQU07WUFDdEIsU0FBUyxFQUFFLEtBQUs7WUFDaEIsVUFBVSxFQUFFLElBQUk7U0FDaEI7UUFDRCxTQUFTLEVBQUU7WUFDVixJQUFJLEVBQUUsU0FBUyxDQUFDLE9BQU87WUFDdkIsU0FBUyxFQUFFLEtBQUs7WUFDaEIsYUFBYSxFQUFFLElBQUk7U0FDbkI7UUFDRCxNQUFNLEVBQUU7WUFDUCxJQUFJLEVBQUUsU0FBUyxDQUFDLE1BQU07WUFDdEIsU0FBUyxFQUFFLEtBQUs7U0FDaEI7UUFDRCxTQUFTLEVBQUU7WUFDVixJQUFJLEVBQUUsU0FBUyxDQUFDLE1BQU07WUFDdEIsU0FBUyxFQUFFLEtBQUs7U0FDaEI7UUFDRCxTQUFTLEVBQUU7WUFDVixJQUFJLEVBQUUsU0FBUyxDQUFDLE1BQU07WUFDdEIsU0FBUyxFQUFFLEtBQUs7U0FDaEI7UUFDRCxTQUFTLEVBQUU7WUFDVixJQUFJLEVBQUUsU0FBUyxDQUFDLElBQUk7WUFDcEIsU0FBUyxFQUFFLEtBQUs7WUFDaEIsWUFBWSxFQUFFLFNBQVMsQ0FBQyxHQUFHO1NBQzNCO1FBQ0QsU0FBUyxFQUFFO1lBQ1YsSUFBSSxFQUFFLFNBQVMsQ0FBQyxJQUFJO1lBQ3BCLFNBQVMsRUFBRSxJQUFJO1NBQ2Y7UUFDRCxTQUFTLEVBQUU7WUFDVixJQUFJLEVBQUUsU0FBUyxDQUFDLElBQUk7WUFDcEIsU0FBUyxFQUFFLEtBQUs7U0FDaEI7UUFDRCxRQUFRLEVBQUU7WUFDVCxJQUFJLEVBQUUsU0FBUyxDQUFDLE9BQU87WUFDdkIsU0FBUyxFQUFFLEtBQUs7WUFDaEIsWUFBWSxFQUFFLElBQUk7U0FDbEI7S0FDRCxFQUNEO1FBQ0MsU0FBUztRQUNULFNBQVMsRUFBRSxjQUFjO1FBQ3pCLFVBQVUsRUFBRSxJQUFJO1FBQ2hCLFNBQVMsRUFBRSxXQUFXO0tBQ3RCLENBQ0QsQ0FBQztJQUVGLE9BQU8sV0FBVyxDQUFDO0FBQ3BCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuXHRDcmVhdGlvbk9wdGlvbmFsLFxuXHRJbmZlckF0dHJpYnV0ZXMsXG5cdEluZmVyQ3JlYXRpb25BdHRyaWJ1dGVzLFxuXHRNb2RlbCxcblx0RGF0YVR5cGVzLFxuXHRTZXF1ZWxpemVcbn0gZnJvbSAnc2VxdWVsaXplJztcblxuaW50ZXJmYWNlIFVzZXJTZXNzaW9uQXR0cmlidXRlcyB7XG5cdGlkOiBzdHJpbmc7XG5cdHNlc3Npb25JZDogbnVtYmVyO1xuXHR1c2VySWQ6IHN0cmluZztcblx0aXBBZGRyZXNzOiBzdHJpbmc7XG5cdHVzZXJBZ2VudDogc3RyaW5nO1xuXHRjcmVhdGVkQXQ6IERhdGU7XG5cdHVwZGF0ZWRBdD86IERhdGUgfCBudWxsO1xuXHRleHBpcmVzQXQ6IERhdGU7XG5cdGlzQWN0aXZlOiBib29sZWFuO1xufVxuXG5jbGFzcyBVc2VyU2Vzc2lvblxuXHRleHRlbmRzIE1vZGVsPFxuXHRcdEluZmVyQXR0cmlidXRlczxVc2VyU2Vzc2lvbj4sXG5cdFx0SW5mZXJDcmVhdGlvbkF0dHJpYnV0ZXM8VXNlclNlc3Npb24+XG5cdD5cblx0aW1wbGVtZW50cyBVc2VyU2Vzc2lvbkF0dHJpYnV0ZXNcbntcblx0aWQhOiBzdHJpbmc7XG5cdHNlc3Npb25JZCE6IG51bWJlcjtcblx0dXNlcklkITogc3RyaW5nO1xuXHRpcEFkZHJlc3MhOiBzdHJpbmc7XG5cdHVzZXJBZ2VudCE6IHN0cmluZztcblx0Y3JlYXRlZEF0ITogQ3JlYXRpb25PcHRpb25hbDxEYXRlPjtcblx0dXBkYXRlZEF0ITogRGF0ZSB8IG51bGw7XG5cdGV4cGlyZXNBdCE6IERhdGU7XG5cdGlzQWN0aXZlITogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlVXNlclNlc3Npb25Nb2RlbChcblx0c2VxdWVsaXplOiBTZXF1ZWxpemVcbik6IHR5cGVvZiBVc2VyU2Vzc2lvbiB7XG5cdFVzZXJTZXNzaW9uLmluaXQoXG5cdFx0e1xuXHRcdFx0aWQ6IHtcblx0XHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklORyxcblx0XHRcdFx0YWxsb3dOdWxsOiBmYWxzZSxcblx0XHRcdFx0cHJpbWFyeUtleTogdHJ1ZVxuXHRcdFx0fSxcblx0XHRcdHNlc3Npb25JZDoge1xuXHRcdFx0XHR0eXBlOiBEYXRhVHlwZXMuSU5URUdFUixcblx0XHRcdFx0YWxsb3dOdWxsOiBmYWxzZSxcblx0XHRcdFx0YXV0b0luY3JlbWVudDogdHJ1ZVxuXHRcdFx0fSxcblx0XHRcdHVzZXJJZDoge1xuXHRcdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxuXHRcdFx0XHRhbGxvd051bGw6IGZhbHNlXG5cdFx0XHR9LFxuXHRcdFx0aXBBZGRyZXNzOiB7XG5cdFx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG5cdFx0XHRcdGFsbG93TnVsbDogZmFsc2Vcblx0XHRcdH0sXG5cdFx0XHR1c2VyQWdlbnQ6IHtcblx0XHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklORyxcblx0XHRcdFx0YWxsb3dOdWxsOiBmYWxzZVxuXHRcdFx0fSxcblx0XHRcdGNyZWF0ZWRBdDoge1xuXHRcdFx0XHR0eXBlOiBEYXRhVHlwZXMuREFURSxcblx0XHRcdFx0YWxsb3dOdWxsOiBmYWxzZSxcblx0XHRcdFx0ZGVmYXVsdFZhbHVlOiBEYXRhVHlwZXMuTk9XXG5cdFx0XHR9LFxuXHRcdFx0dXBkYXRlZEF0OiB7XG5cdFx0XHRcdHR5cGU6IERhdGFUeXBlcy5EQVRFLFxuXHRcdFx0XHRhbGxvd051bGw6IHRydWVcblx0XHRcdH0sXG5cdFx0XHRleHBpcmVzQXQ6IHtcblx0XHRcdFx0dHlwZTogRGF0YVR5cGVzLkRBVEUsXG5cdFx0XHRcdGFsbG93TnVsbDogZmFsc2Vcblx0XHRcdH0sXG5cdFx0XHRpc0FjdGl2ZToge1xuXHRcdFx0XHR0eXBlOiBEYXRhVHlwZXMuQk9PTEVBTixcblx0XHRcdFx0YWxsb3dOdWxsOiBmYWxzZSxcblx0XHRcdFx0ZGVmYXVsdFZhbHVlOiB0cnVlXG5cdFx0XHR9XG5cdFx0fSxcblx0XHR7XG5cdFx0XHRzZXF1ZWxpemUsXG5cdFx0XHR0YWJsZU5hbWU6ICdVc2VyU2Vzc2lvbnMnLFxuXHRcdFx0dGltZXN0YW1wczogdHJ1ZSxcblx0XHRcdHVwZGF0ZWRBdDogJ3VwZGF0ZWRBdCdcblx0XHR9XG5cdCk7XG5cblx0cmV0dXJuIFVzZXJTZXNzaW9uO1xufVxuIl19
