import { Model, DataTypes } from 'sequelize';
class FeatureRequest extends Model {
	featureRequestNumber;
	id;
	email;
	featureRequestType;
	featureRequestContent;
	canFollowUpFeatureRequest;
	featureRequestOpenDate;
	featureRequestCloseDate;
}
export default function createFeatureRequestModel(sequelize) {
	FeatureRequest.init(
		{
			featureRequestNumber: {
				type: DataTypes.INTEGER,
				allowNull: false,
				primaryKey: true,
				autoIncrement: true // Assuming this should be auto-incremented
			},
			id: {
				type: DataTypes.STRING,
				allowNull: false
			},
			email: {
				type: DataTypes.STRING,
				allowNull: true
			},
			featureRequestType: {
				type: DataTypes.STRING,
				allowNull: false
			},
			featureRequestContent: {
				type: DataTypes.TEXT,
				allowNull: false
			},
			canFollowUpFeatureRequest: {
				type: DataTypes.BOOLEAN,
				allowNull: false
			},
			featureRequestOpenDate: {
				type: DataTypes.DATE,
				allowNull: false,
				defaultValue: DataTypes.NOW
			},
			featureRequestCloseDate: {
				type: DataTypes.DATE,
				allowNull: true
			}
		},
		{
			sequelize,
			tableName: 'FeatureRequests',
			timestamps: false
		}
	);
	return FeatureRequest;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmVhdHVyZVJlcXVlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbW9kZWxzL0ZlYXR1cmVSZXF1ZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTixLQUFLLEVBSUwsU0FBUyxFQUVULE1BQU0sV0FBVyxDQUFDO0FBYW5CLE1BQU0sY0FDTCxTQUFRLEtBR1A7SUFHRCxvQkFBb0IsQ0FBVTtJQUM5QixFQUFFLENBQVU7SUFDWixLQUFLLENBQWlCO0lBQ3RCLGtCQUFrQixDQUFVO0lBQzVCLHFCQUFxQixDQUFVO0lBQy9CLHlCQUF5QixDQUFXO0lBQ3BDLHNCQUFzQixDQUEwQjtJQUNoRCx1QkFBdUIsQ0FBZTtDQUN0QztBQUVELE1BQU0sQ0FBQyxPQUFPLFVBQVUseUJBQXlCLENBQ2hELFNBQW9CO0lBRXBCLGNBQWMsQ0FBQyxJQUFJLENBQ2xCO1FBQ0Msb0JBQW9CLEVBQUU7WUFDckIsSUFBSSxFQUFFLFNBQVMsQ0FBQyxPQUFPO1lBQ3ZCLFNBQVMsRUFBRSxLQUFLO1lBQ2hCLFVBQVUsRUFBRSxJQUFJO1lBQ2hCLGFBQWEsRUFBRSxJQUFJLENBQUMsMkNBQTJDO1NBQy9EO1FBQ0QsRUFBRSxFQUFFO1lBQ0gsSUFBSSxFQUFFLFNBQVMsQ0FBQyxNQUFNO1lBQ3RCLFNBQVMsRUFBRSxLQUFLO1NBQ2hCO1FBQ0QsS0FBSyxFQUFFO1lBQ04sSUFBSSxFQUFFLFNBQVMsQ0FBQyxNQUFNO1lBQ3RCLFNBQVMsRUFBRSxJQUFJO1NBQ2Y7UUFDRCxrQkFBa0IsRUFBRTtZQUNuQixJQUFJLEVBQUUsU0FBUyxDQUFDLE1BQU07WUFDdEIsU0FBUyxFQUFFLEtBQUs7U0FDaEI7UUFDRCxxQkFBcUIsRUFBRTtZQUN0QixJQUFJLEVBQUUsU0FBUyxDQUFDLElBQUk7WUFDcEIsU0FBUyxFQUFFLEtBQUs7U0FDaEI7UUFDRCx5QkFBeUIsRUFBRTtZQUMxQixJQUFJLEVBQUUsU0FBUyxDQUFDLE9BQU87WUFDdkIsU0FBUyxFQUFFLEtBQUs7U0FDaEI7UUFDRCxzQkFBc0IsRUFBRTtZQUN2QixJQUFJLEVBQUUsU0FBUyxDQUFDLElBQUk7WUFDcEIsU0FBUyxFQUFFLEtBQUs7WUFDaEIsWUFBWSxFQUFFLFNBQVMsQ0FBQyxHQUFHO1NBQzNCO1FBQ0QsdUJBQXVCLEVBQUU7WUFDeEIsSUFBSSxFQUFFLFNBQVMsQ0FBQyxJQUFJO1lBQ3BCLFNBQVMsRUFBRSxJQUFJO1NBQ2Y7S0FDRCxFQUNEO1FBQ0MsU0FBUztRQUNULFNBQVMsRUFBRSxpQkFBaUI7UUFDNUIsVUFBVSxFQUFFLEtBQUs7S0FDakIsQ0FDRCxDQUFDO0lBRUYsT0FBTyxjQUFjLENBQUM7QUFDdkIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG5cdE1vZGVsLFxuXHRJbmZlckF0dHJpYnV0ZXMsXG5cdEluZmVyQ3JlYXRpb25BdHRyaWJ1dGVzLFxuXHRDcmVhdGlvbk9wdGlvbmFsLFxuXHREYXRhVHlwZXMsXG5cdFNlcXVlbGl6ZVxufSBmcm9tICdzZXF1ZWxpemUnO1xuXG5pbnRlcmZhY2UgRmVhdHVyZVJlcXVlc3RBdHRyaWJ1dGVzIHtcblx0ZmVhdHVyZVJlcXVlc3ROdW1iZXI6IG51bWJlcjtcblx0aWQ6IHN0cmluZztcblx0ZW1haWw/OiBzdHJpbmcgfCBudWxsO1xuXHRmZWF0dXJlUmVxdWVzdFR5cGU6IHN0cmluZztcblx0ZmVhdHVyZVJlcXVlc3RDb250ZW50OiBzdHJpbmc7XG5cdGNhbkZvbGxvd1VwRmVhdHVyZVJlcXVlc3Q6IGJvb2xlYW47XG5cdGZlYXR1cmVSZXF1ZXN0T3BlbkRhdGU6IERhdGU7XG5cdGZlYXR1cmVSZXF1ZXN0Q2xvc2VEYXRlPzogRGF0ZSB8IG51bGw7XG59XG5cbmNsYXNzIEZlYXR1cmVSZXF1ZXN0XG5cdGV4dGVuZHMgTW9kZWw8XG5cdFx0SW5mZXJBdHRyaWJ1dGVzPEZlYXR1cmVSZXF1ZXN0Pixcblx0XHRJbmZlckNyZWF0aW9uQXR0cmlidXRlczxGZWF0dXJlUmVxdWVzdD5cblx0PlxuXHRpbXBsZW1lbnRzIEZlYXR1cmVSZXF1ZXN0QXR0cmlidXRlc1xue1xuXHRmZWF0dXJlUmVxdWVzdE51bWJlciE6IG51bWJlcjtcblx0aWQhOiBzdHJpbmc7XG5cdGVtYWlsITogc3RyaW5nIHwgbnVsbDtcblx0ZmVhdHVyZVJlcXVlc3RUeXBlITogc3RyaW5nO1xuXHRmZWF0dXJlUmVxdWVzdENvbnRlbnQhOiBzdHJpbmc7XG5cdGNhbkZvbGxvd1VwRmVhdHVyZVJlcXVlc3QhOiBib29sZWFuO1xuXHRmZWF0dXJlUmVxdWVzdE9wZW5EYXRlITogQ3JlYXRpb25PcHRpb25hbDxEYXRlPjtcblx0ZmVhdHVyZVJlcXVlc3RDbG9zZURhdGUhOiBEYXRlIHwgbnVsbDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlRmVhdHVyZVJlcXVlc3RNb2RlbChcblx0c2VxdWVsaXplOiBTZXF1ZWxpemVcbik6IHR5cGVvZiBGZWF0dXJlUmVxdWVzdCB7XG5cdEZlYXR1cmVSZXF1ZXN0LmluaXQoXG5cdFx0e1xuXHRcdFx0ZmVhdHVyZVJlcXVlc3ROdW1iZXI6IHtcblx0XHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXG5cdFx0XHRcdGFsbG93TnVsbDogZmFsc2UsXG5cdFx0XHRcdHByaW1hcnlLZXk6IHRydWUsXG5cdFx0XHRcdGF1dG9JbmNyZW1lbnQ6IHRydWUgLy8gQXNzdW1pbmcgdGhpcyBzaG91bGQgYmUgYXV0by1pbmNyZW1lbnRlZFxuXHRcdFx0fSxcblx0XHRcdGlkOiB7XG5cdFx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG5cdFx0XHRcdGFsbG93TnVsbDogZmFsc2Vcblx0XHRcdH0sXG5cdFx0XHRlbWFpbDoge1xuXHRcdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxuXHRcdFx0XHRhbGxvd051bGw6IHRydWVcblx0XHRcdH0sXG5cdFx0XHRmZWF0dXJlUmVxdWVzdFR5cGU6IHtcblx0XHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklORyxcblx0XHRcdFx0YWxsb3dOdWxsOiBmYWxzZVxuXHRcdFx0fSxcblx0XHRcdGZlYXR1cmVSZXF1ZXN0Q29udGVudDoge1xuXHRcdFx0XHR0eXBlOiBEYXRhVHlwZXMuVEVYVCxcblx0XHRcdFx0YWxsb3dOdWxsOiBmYWxzZVxuXHRcdFx0fSxcblx0XHRcdGNhbkZvbGxvd1VwRmVhdHVyZVJlcXVlc3Q6IHtcblx0XHRcdFx0dHlwZTogRGF0YVR5cGVzLkJPT0xFQU4sXG5cdFx0XHRcdGFsbG93TnVsbDogZmFsc2Vcblx0XHRcdH0sXG5cdFx0XHRmZWF0dXJlUmVxdWVzdE9wZW5EYXRlOiB7XG5cdFx0XHRcdHR5cGU6IERhdGFUeXBlcy5EQVRFLFxuXHRcdFx0XHRhbGxvd051bGw6IGZhbHNlLFxuXHRcdFx0XHRkZWZhdWx0VmFsdWU6IERhdGFUeXBlcy5OT1dcblx0XHRcdH0sXG5cdFx0XHRmZWF0dXJlUmVxdWVzdENsb3NlRGF0ZToge1xuXHRcdFx0XHR0eXBlOiBEYXRhVHlwZXMuREFURSxcblx0XHRcdFx0YWxsb3dOdWxsOiB0cnVlXG5cdFx0XHR9XG5cdFx0fSxcblx0XHR7XG5cdFx0XHRzZXF1ZWxpemUsXG5cdFx0XHR0YWJsZU5hbWU6ICdGZWF0dXJlUmVxdWVzdHMnLFxuXHRcdFx0dGltZXN0YW1wczogZmFsc2Vcblx0XHR9XG5cdCk7XG5cblx0cmV0dXJuIEZlYXR1cmVSZXF1ZXN0O1xufVxuIl19
