import { DataTypes, Model } from 'sequelize';
import { User } from './User.mjs';
import { processError } from '../utils/processError.mjs';
import { validateDependencies } from '../utils/validateDependencies.mjs';
class SupportRequest extends Model {
	id;
	email;
	supportTicketNumber;
	supportType;
	supportContent;
	isSupportTicketOpen;
	supportTicketOpenDate;
	supportTicketCloseDate;
}
export default function createSupportRequestModel(sequelize, logger) {
	try {
		validateDependencies(
			[{ name: 'sequelize', instance: sequelize }],
			logger || console
		);
		SupportRequest.init(
			{
				id: {
					type: DataTypes.UUID,
					defaultValue: DataTypes.UUIDV4,
					primaryKey: true,
					allowNull: false,
					unique: true,
					references: {
						model: User,
						key: 'id'
					}
				},
				email: {
					type: DataTypes.STRING,
					allowNull: false
				},
				supportTicketNumber: {
					type: DataTypes.INTEGER,
					autoIncrement: true,
					allowNull: true,
					unique: true
				},
				supportType: {
					type: DataTypes.TEXT,
					allowNull: false
				},
				supportContent: {
					type: DataTypes.TEXT,
					allowNull: false
				},
				isSupportTicketOpen: {
					type: DataTypes.BOOLEAN,
					defaultValue: true,
					allowNull: false
				},
				supportTicketOpenDate: {
					type: DataTypes.DATE,
					defaultValue: DataTypes.NOW,
					allowNull: false
				},
				supportTicketCloseDate: {
					type: DataTypes.DATE,
					allowNull: true
				}
			},
			{
				sequelize,
				modelName: 'SupportRequest',
				timestamps: true
			}
		);
		return SupportRequest;
	} catch (error) {
		processError(error, logger || console);
		throw error;
	}
}
export { SupportRequest };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3VwcG9ydFJlcXVlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbW9kZWxzL1N1cHBvcnRSZXF1ZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFFTixTQUFTLEVBR1QsS0FBSyxFQUVMLE1BQU0sV0FBVyxDQUFDO0FBQ25CLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFFOUIsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3JELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBYXJFLE1BQU0sY0FDTCxTQUFRLEtBR1A7SUFHTSxFQUFFLENBQVU7SUFDWixLQUFLLENBQVU7SUFDZixtQkFBbUIsQ0FBVTtJQUM3QixXQUFXLENBQVU7SUFDckIsY0FBYyxDQUFVO0lBQ3hCLG1CQUFtQixDQUFXO0lBQzlCLHFCQUFxQixDQUFRO0lBQzdCLHNCQUFzQixDQUFlO0NBQzVDO0FBRUQsTUFBTSxDQUFDLE9BQU8sVUFBVSx5QkFBeUIsQ0FDaEQsU0FBb0IsRUFDcEIsTUFBYztJQUVkLElBQUksQ0FBQztRQUNKLG9CQUFvQixDQUNuQixDQUFDLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLENBQUMsRUFDNUMsTUFBTSxJQUFJLE9BQU8sQ0FDakIsQ0FBQztRQUVGLGNBQWMsQ0FBQyxJQUFJLENBQ2xCO1lBQ0MsRUFBRSxFQUFFO2dCQUNILElBQUksRUFBRSxTQUFTLENBQUMsSUFBSTtnQkFDcEIsWUFBWSxFQUFFLFNBQVMsQ0FBQyxNQUFNO2dCQUM5QixVQUFVLEVBQUUsSUFBSTtnQkFDaEIsU0FBUyxFQUFFLEtBQUs7Z0JBQ2hCLE1BQU0sRUFBRSxJQUFJO2dCQUNaLFVBQVUsRUFBRTtvQkFDWCxLQUFLLEVBQUUsSUFBSTtvQkFDWCxHQUFHLEVBQUUsSUFBSTtpQkFDVDthQUNEO1lBQ0QsS0FBSyxFQUFFO2dCQUNOLElBQUksRUFBRSxTQUFTLENBQUMsTUFBTTtnQkFDdEIsU0FBUyxFQUFFLEtBQUs7YUFDaEI7WUFDRCxtQkFBbUIsRUFBRTtnQkFDcEIsSUFBSSxFQUFFLFNBQVMsQ0FBQyxPQUFPO2dCQUN2QixhQUFhLEVBQUUsSUFBSTtnQkFDbkIsU0FBUyxFQUFFLElBQUk7Z0JBQ2YsTUFBTSxFQUFFLElBQUk7YUFDWjtZQUNELFdBQVcsRUFBRTtnQkFDWixJQUFJLEVBQUUsU0FBUyxDQUFDLElBQUk7Z0JBQ3BCLFNBQVMsRUFBRSxLQUFLO2FBQ2hCO1lBQ0QsY0FBYyxFQUFFO2dCQUNmLElBQUksRUFBRSxTQUFTLENBQUMsSUFBSTtnQkFDcEIsU0FBUyxFQUFFLEtBQUs7YUFDaEI7WUFDRCxtQkFBbUIsRUFBRTtnQkFDcEIsSUFBSSxFQUFFLFNBQVMsQ0FBQyxPQUFPO2dCQUN2QixZQUFZLEVBQUUsSUFBSTtnQkFDbEIsU0FBUyxFQUFFLEtBQUs7YUFDaEI7WUFDRCxxQkFBcUIsRUFBRTtnQkFDdEIsSUFBSSxFQUFFLFNBQVMsQ0FBQyxJQUFJO2dCQUNwQixZQUFZLEVBQUUsU0FBUyxDQUFDLEdBQUc7Z0JBQzNCLFNBQVMsRUFBRSxLQUFLO2FBQ2hCO1lBQ0Qsc0JBQXNCLEVBQUU7Z0JBQ3ZCLElBQUksRUFBRSxTQUFTLENBQUMsSUFBSTtnQkFDcEIsU0FBUyxFQUFFLElBQUk7YUFDZjtTQUNELEVBQ0Q7WUFDQyxTQUFTO1lBQ1QsU0FBUyxFQUFFLGdCQUFnQjtZQUMzQixVQUFVLEVBQUUsSUFBSTtTQUNoQixDQUNELENBQUM7UUFFRixPQUFPLGNBQWMsQ0FBQztJQUN2QixDQUFDO0lBQUMsT0FBTyxLQUFLLEVBQUUsQ0FBQztRQUNoQixZQUFZLENBQUMsS0FBSyxFQUFFLE1BQU0sSUFBSSxPQUFPLENBQUMsQ0FBQztRQUN2QyxNQUFNLEtBQUssQ0FBQztJQUNiLENBQUM7QUFDRixDQUFDO0FBRUQsT0FBTyxFQUFFLGNBQWMsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcblx0Q3JlYXRpb25PcHRpb25hbCxcblx0RGF0YVR5cGVzLFxuXHRJbmZlckF0dHJpYnV0ZXMsXG5cdEluZmVyQ3JlYXRpb25BdHRyaWJ1dGVzLFxuXHRNb2RlbCxcblx0U2VxdWVsaXplXG59IGZyb20gJ3NlcXVlbGl6ZSc7XG5pbXBvcnQgeyBVc2VyIH0gZnJvbSAnLi9Vc2VyJztcbmltcG9ydCB7IExvZ2dlciB9IGZyb20gJy4uL2NvbmZpZy9sb2dnZXInO1xuaW1wb3J0IHsgcHJvY2Vzc0Vycm9yIH0gZnJvbSAnLi4vdXRpbHMvcHJvY2Vzc0Vycm9yJztcbmltcG9ydCB7IHZhbGlkYXRlRGVwZW5kZW5jaWVzIH0gZnJvbSAnLi4vdXRpbHMvdmFsaWRhdGVEZXBlbmRlbmNpZXMnO1xuXG5pbnRlcmZhY2UgU3VwcG9ydFJlcXVlc3RBdHRyaWJ1dGVzIHtcblx0aWQ6IHN0cmluZzsgLy8gVVVJRCBmb3Igc3VwcG9ydCByZXF1ZXN0LCBwcmltYXJ5IGtleSAoZnJvbSB1c2VyIG1vZGVsKVxuXHRlbWFpbDogc3RyaW5nO1xuXHRzdXBwb3J0VGlja2V0TnVtYmVyOiBudW1iZXI7IC8vIHVuaXF1ZSBzdXBwb3J0IHRpY2tldCBudW1iZXIsIGF1dG8taW5jcmVtZW50ZWRcblx0c3VwcG9ydFR5cGU6IHN0cmluZztcblx0c3VwcG9ydENvbnRlbnQ6IHN0cmluZztcblx0aXNTdXBwb3J0VGlja2V0T3BlbjogYm9vbGVhbjtcblx0c3VwcG9ydFRpY2tldE9wZW5EYXRlOiBDcmVhdGlvbk9wdGlvbmFsPERhdGU+O1xuXHRzdXBwb3J0VGlja2V0Q2xvc2VEYXRlPzogRGF0ZSB8IG51bGw7XG59XG5cbmNsYXNzIFN1cHBvcnRSZXF1ZXN0XG5cdGV4dGVuZHMgTW9kZWw8XG5cdFx0SW5mZXJBdHRyaWJ1dGVzPFN1cHBvcnRSZXF1ZXN0Pixcblx0XHRJbmZlckNyZWF0aW9uQXR0cmlidXRlczxTdXBwb3J0UmVxdWVzdD5cblx0PlxuXHRpbXBsZW1lbnRzIFN1cHBvcnRSZXF1ZXN0QXR0cmlidXRlc1xue1xuXHRwdWJsaWMgaWQhOiBzdHJpbmc7XG5cdHB1YmxpYyBlbWFpbCE6IHN0cmluZztcblx0cHVibGljIHN1cHBvcnRUaWNrZXROdW1iZXIhOiBudW1iZXI7XG5cdHB1YmxpYyBzdXBwb3J0VHlwZSE6IHN0cmluZztcblx0cHVibGljIHN1cHBvcnRDb250ZW50ITogc3RyaW5nO1xuXHRwdWJsaWMgaXNTdXBwb3J0VGlja2V0T3BlbiE6IGJvb2xlYW47XG5cdHB1YmxpYyBzdXBwb3J0VGlja2V0T3BlbkRhdGUhOiBEYXRlO1xuXHRwdWJsaWMgc3VwcG9ydFRpY2tldENsb3NlRGF0ZT86IERhdGUgfCBudWxsO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVTdXBwb3J0UmVxdWVzdE1vZGVsKFxuXHRzZXF1ZWxpemU6IFNlcXVlbGl6ZSxcblx0bG9nZ2VyOiBMb2dnZXJcbik6IHR5cGVvZiBTdXBwb3J0UmVxdWVzdCB7XG5cdHRyeSB7XG5cdFx0dmFsaWRhdGVEZXBlbmRlbmNpZXMoXG5cdFx0XHRbeyBuYW1lOiAnc2VxdWVsaXplJywgaW5zdGFuY2U6IHNlcXVlbGl6ZSB9XSxcblx0XHRcdGxvZ2dlciB8fCBjb25zb2xlXG5cdFx0KTtcblxuXHRcdFN1cHBvcnRSZXF1ZXN0LmluaXQoXG5cdFx0XHR7XG5cdFx0XHRcdGlkOiB7XG5cdFx0XHRcdFx0dHlwZTogRGF0YVR5cGVzLlVVSUQsXG5cdFx0XHRcdFx0ZGVmYXVsdFZhbHVlOiBEYXRhVHlwZXMuVVVJRFY0LFxuXHRcdFx0XHRcdHByaW1hcnlLZXk6IHRydWUsXG5cdFx0XHRcdFx0YWxsb3dOdWxsOiBmYWxzZSxcblx0XHRcdFx0XHR1bmlxdWU6IHRydWUsXG5cdFx0XHRcdFx0cmVmZXJlbmNlczoge1xuXHRcdFx0XHRcdFx0bW9kZWw6IFVzZXIsXG5cdFx0XHRcdFx0XHRrZXk6ICdpZCdcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0sXG5cdFx0XHRcdGVtYWlsOiB7XG5cdFx0XHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklORyxcblx0XHRcdFx0XHRhbGxvd051bGw6IGZhbHNlXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHN1cHBvcnRUaWNrZXROdW1iZXI6IHtcblx0XHRcdFx0XHR0eXBlOiBEYXRhVHlwZXMuSU5URUdFUixcblx0XHRcdFx0XHRhdXRvSW5jcmVtZW50OiB0cnVlLFxuXHRcdFx0XHRcdGFsbG93TnVsbDogdHJ1ZSxcblx0XHRcdFx0XHR1bmlxdWU6IHRydWVcblx0XHRcdFx0fSxcblx0XHRcdFx0c3VwcG9ydFR5cGU6IHtcblx0XHRcdFx0XHR0eXBlOiBEYXRhVHlwZXMuVEVYVCxcblx0XHRcdFx0XHRhbGxvd051bGw6IGZhbHNlXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHN1cHBvcnRDb250ZW50OiB7XG5cdFx0XHRcdFx0dHlwZTogRGF0YVR5cGVzLlRFWFQsXG5cdFx0XHRcdFx0YWxsb3dOdWxsOiBmYWxzZVxuXHRcdFx0XHR9LFxuXHRcdFx0XHRpc1N1cHBvcnRUaWNrZXRPcGVuOiB7XG5cdFx0XHRcdFx0dHlwZTogRGF0YVR5cGVzLkJPT0xFQU4sXG5cdFx0XHRcdFx0ZGVmYXVsdFZhbHVlOiB0cnVlLFxuXHRcdFx0XHRcdGFsbG93TnVsbDogZmFsc2Vcblx0XHRcdFx0fSxcblx0XHRcdFx0c3VwcG9ydFRpY2tldE9wZW5EYXRlOiB7XG5cdFx0XHRcdFx0dHlwZTogRGF0YVR5cGVzLkRBVEUsXG5cdFx0XHRcdFx0ZGVmYXVsdFZhbHVlOiBEYXRhVHlwZXMuTk9XLFxuXHRcdFx0XHRcdGFsbG93TnVsbDogZmFsc2Vcblx0XHRcdFx0fSxcblx0XHRcdFx0c3VwcG9ydFRpY2tldENsb3NlRGF0ZToge1xuXHRcdFx0XHRcdHR5cGU6IERhdGFUeXBlcy5EQVRFLFxuXHRcdFx0XHRcdGFsbG93TnVsbDogdHJ1ZVxuXHRcdFx0XHR9XG5cdFx0XHR9LFxuXHRcdFx0e1xuXHRcdFx0XHRzZXF1ZWxpemUsXG5cdFx0XHRcdG1vZGVsTmFtZTogJ1N1cHBvcnRSZXF1ZXN0Jyxcblx0XHRcdFx0dGltZXN0YW1wczogdHJ1ZVxuXHRcdFx0fVxuXHRcdCk7XG5cblx0XHRyZXR1cm4gU3VwcG9ydFJlcXVlc3Q7XG5cdH0gY2F0Y2ggKGVycm9yKSB7XG5cdFx0cHJvY2Vzc0Vycm9yKGVycm9yLCBsb2dnZXIgfHwgY29uc29sZSk7XG5cdFx0dGhyb3cgZXJyb3I7XG5cdH1cbn1cblxuZXhwb3J0IHsgU3VwcG9ydFJlcXVlc3QgfTtcbiJdfQ==
