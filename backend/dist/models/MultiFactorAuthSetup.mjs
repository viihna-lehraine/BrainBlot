import { Model, DataTypes } from 'sequelize';
class MultiFactorAuthSetup extends Model {
	mfaId;
	id;
	userId;
	method;
	secret;
	publicKey;
	counter;
	isActive;
	createdAt;
	updatedAt;
}
export default function createMultiFactorAuthSetupModel(sequelize) {
	MultiFactorAuthSetup.init(
		{
			mfaId: {
				type: DataTypes.INTEGER,
				autoIncrement: true,
				primaryKey: true
			},
			id: {
				type: DataTypes.STRING,
				allowNull: false
			},
			userId: {
				type: DataTypes.STRING,
				allowNull: false
			},
			method: {
				type: DataTypes.ENUM(
					'totp',
					'email',
					'yubico',
					'fido2',
					'passkey'
				),
				allowNull: false
			},
			secret: {
				type: DataTypes.STRING,
				allowNull: true
			},
			publicKey: {
				type: DataTypes.STRING,
				allowNull: true
			},
			counter: {
				type: DataTypes.INTEGER,
				allowNull: true
			},
			isActive: {
				type: DataTypes.BOOLEAN,
				allowNull: false,
				defaultValue: true
			},
			createdAt: {
				type: DataTypes.DATE,
				allowNull: false,
				defaultValue: DataTypes.NOW
			},
			updatedAt: {
				type: DataTypes.DATE,
				allowNull: false,
				defaultValue: DataTypes.NOW
			}
		},
		{
			sequelize,
			tableName: 'MultiFactorAuthSetups',
			timestamps: true
		}
	);
	return MultiFactorAuthSetup;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTXVsdGlGYWN0b3JBdXRoU2V0dXAuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbW9kZWxzL011bHRpRmFjdG9yQXV0aFNldHVwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFJTixLQUFLLEVBQ0wsU0FBUyxFQUVULE1BQU0sV0FBVyxDQUFDO0FBZW5CLE1BQU0sb0JBQ0wsU0FBUSxLQUdQO0lBR0QsS0FBSyxDQUFVO0lBQ2YsRUFBRSxDQUFVO0lBQ1osTUFBTSxDQUFVO0lBQ2hCLE1BQU0sQ0FBcUQ7SUFDM0QsTUFBTSxDQUFpQjtJQUN2QixTQUFTLENBQWlCO0lBQzFCLE9BQU8sQ0FBaUI7SUFDeEIsUUFBUSxDQUFXO0lBQ25CLFNBQVMsQ0FBMEI7SUFDbkMsU0FBUyxDQUEwQjtDQUNuQztBQUVELE1BQU0sQ0FBQyxPQUFPLFVBQVUsK0JBQStCLENBQ3RELFNBQW9CO0lBRXBCLG9CQUFvQixDQUFDLElBQUksQ0FDeEI7UUFDQyxLQUFLLEVBQUU7WUFDTixJQUFJLEVBQUUsU0FBUyxDQUFDLE9BQU87WUFDdkIsYUFBYSxFQUFFLElBQUk7WUFDbkIsVUFBVSxFQUFFLElBQUk7U0FDaEI7UUFDRCxFQUFFLEVBQUU7WUFDSCxJQUFJLEVBQUUsU0FBUyxDQUFDLE1BQU07WUFDdEIsU0FBUyxFQUFFLEtBQUs7U0FDaEI7UUFDRCxNQUFNLEVBQUU7WUFDUCxJQUFJLEVBQUUsU0FBUyxDQUFDLE1BQU07WUFDdEIsU0FBUyxFQUFFLEtBQUs7U0FDaEI7UUFDRCxNQUFNLEVBQUU7WUFDUCxJQUFJLEVBQUUsU0FBUyxDQUFDLElBQUksQ0FDbkIsTUFBTSxFQUNOLE9BQU8sRUFDUCxRQUFRLEVBQ1IsT0FBTyxFQUNQLFNBQVMsQ0FDVDtZQUNELFNBQVMsRUFBRSxLQUFLO1NBQ2hCO1FBQ0QsTUFBTSxFQUFFO1lBQ1AsSUFBSSxFQUFFLFNBQVMsQ0FBQyxNQUFNO1lBQ3RCLFNBQVMsRUFBRSxJQUFJO1NBQ2Y7UUFDRCxTQUFTLEVBQUU7WUFDVixJQUFJLEVBQUUsU0FBUyxDQUFDLE1BQU07WUFDdEIsU0FBUyxFQUFFLElBQUk7U0FDZjtRQUNELE9BQU8sRUFBRTtZQUNSLElBQUksRUFBRSxTQUFTLENBQUMsT0FBTztZQUN2QixTQUFTLEVBQUUsSUFBSTtTQUNmO1FBQ0QsUUFBUSxFQUFFO1lBQ1QsSUFBSSxFQUFFLFNBQVMsQ0FBQyxPQUFPO1lBQ3ZCLFNBQVMsRUFBRSxLQUFLO1lBQ2hCLFlBQVksRUFBRSxJQUFJO1NBQ2xCO1FBQ0QsU0FBUyxFQUFFO1lBQ1YsSUFBSSxFQUFFLFNBQVMsQ0FBQyxJQUFJO1lBQ3BCLFNBQVMsRUFBRSxLQUFLO1lBQ2hCLFlBQVksRUFBRSxTQUFTLENBQUMsR0FBRztTQUMzQjtRQUNELFNBQVMsRUFBRTtZQUNWLElBQUksRUFBRSxTQUFTLENBQUMsSUFBSTtZQUNwQixTQUFTLEVBQUUsS0FBSztZQUNoQixZQUFZLEVBQUUsU0FBUyxDQUFDLEdBQUc7U0FDM0I7S0FDRCxFQUNEO1FBQ0MsU0FBUztRQUNULFNBQVMsRUFBRSx1QkFBdUI7UUFDbEMsVUFBVSxFQUFFLElBQUk7S0FDaEIsQ0FDRCxDQUFDO0lBRUYsT0FBTyxvQkFBb0IsQ0FBQztBQUM3QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcblx0Q3JlYXRpb25PcHRpb25hbCxcblx0SW5mZXJBdHRyaWJ1dGVzLFxuXHRJbmZlckNyZWF0aW9uQXR0cmlidXRlcyxcblx0TW9kZWwsXG5cdERhdGFUeXBlcyxcblx0U2VxdWVsaXplXG59IGZyb20gJ3NlcXVlbGl6ZSc7XG5cbmludGVyZmFjZSBNdWx0aUZhY3RvckF1dGhTZXR1cEF0dHJpYnV0ZXMge1xuXHRtZmFJZDogbnVtYmVyO1xuXHRpZDogc3RyaW5nO1xuXHR1c2VySWQ6IHN0cmluZztcblx0bWV0aG9kOiAndG90cCcgfCAnZW1haWwnIHwgJ3l1YmljbycgfCAnZmlkbzInIHwgJ3Bhc3NrZXknO1xuXHRzZWNyZXQ/OiBzdHJpbmcgfCBudWxsO1xuXHRwdWJsaWNLZXk/OiBzdHJpbmcgfCBudWxsO1xuXHRjb3VudGVyPzogbnVtYmVyIHwgbnVsbDtcblx0aXNBY3RpdmU6IGJvb2xlYW47XG5cdGNyZWF0ZWRBdDogRGF0ZTtcblx0dXBkYXRlZEF0OiBEYXRlO1xufVxuXG5jbGFzcyBNdWx0aUZhY3RvckF1dGhTZXR1cFxuXHRleHRlbmRzIE1vZGVsPFxuXHRcdEluZmVyQXR0cmlidXRlczxNdWx0aUZhY3RvckF1dGhTZXR1cD4sXG5cdFx0SW5mZXJDcmVhdGlvbkF0dHJpYnV0ZXM8TXVsdGlGYWN0b3JBdXRoU2V0dXA+XG5cdD5cblx0aW1wbGVtZW50cyBNdWx0aUZhY3RvckF1dGhTZXR1cEF0dHJpYnV0ZXNcbntcblx0bWZhSWQhOiBudW1iZXI7XG5cdGlkITogc3RyaW5nO1xuXHR1c2VySWQhOiBzdHJpbmc7XG5cdG1ldGhvZCE6ICd0b3RwJyB8ICdlbWFpbCcgfCAneXViaWNvJyB8ICdmaWRvMicgfCAncGFzc2tleSc7XG5cdHNlY3JldCE6IHN0cmluZyB8IG51bGw7XG5cdHB1YmxpY0tleSE6IHN0cmluZyB8IG51bGw7XG5cdGNvdW50ZXIhOiBudW1iZXIgfCBudWxsO1xuXHRpc0FjdGl2ZSE6IGJvb2xlYW47XG5cdGNyZWF0ZWRBdCE6IENyZWF0aW9uT3B0aW9uYWw8RGF0ZT47XG5cdHVwZGF0ZWRBdCE6IENyZWF0aW9uT3B0aW9uYWw8RGF0ZT47XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZU11bHRpRmFjdG9yQXV0aFNldHVwTW9kZWwoXG5cdHNlcXVlbGl6ZTogU2VxdWVsaXplXG4pOiB0eXBlb2YgTXVsdGlGYWN0b3JBdXRoU2V0dXAge1xuXHRNdWx0aUZhY3RvckF1dGhTZXR1cC5pbml0KFxuXHRcdHtcblx0XHRcdG1mYUlkOiB7XG5cdFx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSLFxuXHRcdFx0XHRhdXRvSW5jcmVtZW50OiB0cnVlLFxuXHRcdFx0XHRwcmltYXJ5S2V5OiB0cnVlXG5cdFx0XHR9LFxuXHRcdFx0aWQ6IHtcblx0XHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklORyxcblx0XHRcdFx0YWxsb3dOdWxsOiBmYWxzZVxuXHRcdFx0fSxcblx0XHRcdHVzZXJJZDoge1xuXHRcdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxuXHRcdFx0XHRhbGxvd051bGw6IGZhbHNlXG5cdFx0XHR9LFxuXHRcdFx0bWV0aG9kOiB7XG5cdFx0XHRcdHR5cGU6IERhdGFUeXBlcy5FTlVNKFxuXHRcdFx0XHRcdCd0b3RwJyxcblx0XHRcdFx0XHQnZW1haWwnLFxuXHRcdFx0XHRcdCd5dWJpY28nLFxuXHRcdFx0XHRcdCdmaWRvMicsXG5cdFx0XHRcdFx0J3Bhc3NrZXknXG5cdFx0XHRcdCksXG5cdFx0XHRcdGFsbG93TnVsbDogZmFsc2Vcblx0XHRcdH0sXG5cdFx0XHRzZWNyZXQ6IHtcblx0XHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklORyxcblx0XHRcdFx0YWxsb3dOdWxsOiB0cnVlXG5cdFx0XHR9LFxuXHRcdFx0cHVibGljS2V5OiB7XG5cdFx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG5cdFx0XHRcdGFsbG93TnVsbDogdHJ1ZVxuXHRcdFx0fSxcblx0XHRcdGNvdW50ZXI6IHtcblx0XHRcdFx0dHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXG5cdFx0XHRcdGFsbG93TnVsbDogdHJ1ZVxuXHRcdFx0fSxcblx0XHRcdGlzQWN0aXZlOiB7XG5cdFx0XHRcdHR5cGU6IERhdGFUeXBlcy5CT09MRUFOLFxuXHRcdFx0XHRhbGxvd051bGw6IGZhbHNlLFxuXHRcdFx0XHRkZWZhdWx0VmFsdWU6IHRydWVcblx0XHRcdH0sXG5cdFx0XHRjcmVhdGVkQXQ6IHtcblx0XHRcdFx0dHlwZTogRGF0YVR5cGVzLkRBVEUsXG5cdFx0XHRcdGFsbG93TnVsbDogZmFsc2UsXG5cdFx0XHRcdGRlZmF1bHRWYWx1ZTogRGF0YVR5cGVzLk5PV1xuXHRcdFx0fSxcblx0XHRcdHVwZGF0ZWRBdDoge1xuXHRcdFx0XHR0eXBlOiBEYXRhVHlwZXMuREFURSxcblx0XHRcdFx0YWxsb3dOdWxsOiBmYWxzZSxcblx0XHRcdFx0ZGVmYXVsdFZhbHVlOiBEYXRhVHlwZXMuTk9XXG5cdFx0XHR9XG5cdFx0fSxcblx0XHR7XG5cdFx0XHRzZXF1ZWxpemUsXG5cdFx0XHR0YWJsZU5hbWU6ICdNdWx0aUZhY3RvckF1dGhTZXR1cHMnLFxuXHRcdFx0dGltZXN0YW1wczogdHJ1ZVxuXHRcdH1cblx0KTtcblxuXHRyZXR1cm4gTXVsdGlGYWN0b3JBdXRoU2V0dXA7XG59XG4iXX0=
