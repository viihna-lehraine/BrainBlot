import { Model, DataTypes } from 'sequelize';
class RecoveryMethod extends Model {
	id;
	isRecoveryActive;
	recoveryId;
	recoveryMethod;
	backupCodes;
	recoveryLastUpdated;
}
export default function createRecoveryMethodModel(sequelize) {
	RecoveryMethod.init(
		{
			id: {
				type: DataTypes.STRING,
				allowNull: false,
				primaryKey: true
			},
			isRecoveryActive: {
				type: DataTypes.BOOLEAN,
				allowNull: false,
				defaultValue: true
			},
			recoveryId: {
				type: DataTypes.STRING,
				allowNull: false
			},
			recoveryMethod: {
				type: DataTypes.ENUM('email', 'backupCodes'),
				allowNull: false
			},
			backupCodes: {
				type: DataTypes.ARRAY(DataTypes.STRING),
				allowNull: true
			},
			recoveryLastUpdated: {
				type: DataTypes.DATE,
				allowNull: false,
				defaultValue: DataTypes.NOW
			}
		},
		{
			sequelize,
			tableName: 'RecoveryMethods',
			timestamps: false
		}
	);
	return RecoveryMethod;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVjb3ZlcnlNZXRob2QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbW9kZWxzL1JlY292ZXJ5TWV0aG9kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFJTixLQUFLLEVBQ0wsU0FBUyxFQUVULE1BQU0sV0FBVyxDQUFDO0FBV25CLE1BQU0sY0FDTCxTQUFRLEtBR1A7SUFHRCxFQUFFLENBQVU7SUFDWixnQkFBZ0IsQ0FBVztJQUMzQixVQUFVLENBQVU7SUFDcEIsY0FBYyxDQUEyQjtJQUN6QyxXQUFXLENBQW1CO0lBQzlCLG1CQUFtQixDQUEwQjtDQUM3QztBQUVELE1BQU0sQ0FBQyxPQUFPLFVBQVUseUJBQXlCLENBQ2hELFNBQW9CO0lBRXBCLGNBQWMsQ0FBQyxJQUFJLENBQ2xCO1FBQ0MsRUFBRSxFQUFFO1lBQ0gsSUFBSSxFQUFFLFNBQVMsQ0FBQyxNQUFNO1lBQ3RCLFNBQVMsRUFBRSxLQUFLO1lBQ2hCLFVBQVUsRUFBRSxJQUFJO1NBQ2hCO1FBQ0QsZ0JBQWdCLEVBQUU7WUFDakIsSUFBSSxFQUFFLFNBQVMsQ0FBQyxPQUFPO1lBQ3ZCLFNBQVMsRUFBRSxLQUFLO1lBQ2hCLFlBQVksRUFBRSxJQUFJO1NBQ2xCO1FBQ0QsVUFBVSxFQUFFO1lBQ1gsSUFBSSxFQUFFLFNBQVMsQ0FBQyxNQUFNO1lBQ3RCLFNBQVMsRUFBRSxLQUFLO1NBQ2hCO1FBQ0QsY0FBYyxFQUFFO1lBQ2YsSUFBSSxFQUFFLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLGFBQWEsQ0FBQztZQUM1QyxTQUFTLEVBQUUsS0FBSztTQUNoQjtRQUNELFdBQVcsRUFBRTtZQUNaLElBQUksRUFBRSxTQUFTLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUM7WUFDdkMsU0FBUyxFQUFFLElBQUk7U0FDZjtRQUNELG1CQUFtQixFQUFFO1lBQ3BCLElBQUksRUFBRSxTQUFTLENBQUMsSUFBSTtZQUNwQixTQUFTLEVBQUUsS0FBSztZQUNoQixZQUFZLEVBQUUsU0FBUyxDQUFDLEdBQUc7U0FDM0I7S0FDRCxFQUNEO1FBQ0MsU0FBUztRQUNULFNBQVMsRUFBRSxpQkFBaUI7UUFDNUIsVUFBVSxFQUFFLEtBQUs7S0FDakIsQ0FDRCxDQUFDO0lBRUYsT0FBTyxjQUFjLENBQUM7QUFDdkIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG5cdENyZWF0aW9uT3B0aW9uYWwsXG5cdEluZmVyQXR0cmlidXRlcyxcblx0SW5mZXJDcmVhdGlvbkF0dHJpYnV0ZXMsXG5cdE1vZGVsLFxuXHREYXRhVHlwZXMsXG5cdFNlcXVlbGl6ZVxufSBmcm9tICdzZXF1ZWxpemUnO1xuXG5pbnRlcmZhY2UgUmVjb3ZlcnlNZXRob2RBdHRyaWJ1dGVzIHtcblx0aWQ6IHN0cmluZztcblx0aXNSZWNvdmVyeUFjdGl2ZTogYm9vbGVhbjtcblx0cmVjb3ZlcnlJZDogc3RyaW5nO1xuXHRyZWNvdmVyeU1ldGhvZDogJ2VtYWlsJyB8ICdiYWNrdXBDb2Rlcyc7XG5cdGJhY2t1cENvZGVzPzogc3RyaW5nW10gfCBudWxsO1xuXHRyZWNvdmVyeUxhc3RVcGRhdGVkOiBEYXRlO1xufVxuXG5jbGFzcyBSZWNvdmVyeU1ldGhvZFxuXHRleHRlbmRzIE1vZGVsPFxuXHRcdEluZmVyQXR0cmlidXRlczxSZWNvdmVyeU1ldGhvZD4sXG5cdFx0SW5mZXJDcmVhdGlvbkF0dHJpYnV0ZXM8UmVjb3ZlcnlNZXRob2Q+XG5cdD5cblx0aW1wbGVtZW50cyBSZWNvdmVyeU1ldGhvZEF0dHJpYnV0ZXNcbntcblx0aWQhOiBzdHJpbmc7XG5cdGlzUmVjb3ZlcnlBY3RpdmUhOiBib29sZWFuO1xuXHRyZWNvdmVyeUlkITogc3RyaW5nO1xuXHRyZWNvdmVyeU1ldGhvZCE6ICdlbWFpbCcgfCAnYmFja3VwQ29kZXMnO1xuXHRiYWNrdXBDb2RlcyE6IHN0cmluZ1tdIHwgbnVsbDtcblx0cmVjb3ZlcnlMYXN0VXBkYXRlZCE6IENyZWF0aW9uT3B0aW9uYWw8RGF0ZT47XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZVJlY292ZXJ5TWV0aG9kTW9kZWwoXG5cdHNlcXVlbGl6ZTogU2VxdWVsaXplXG4pOiB0eXBlb2YgUmVjb3ZlcnlNZXRob2Qge1xuXHRSZWNvdmVyeU1ldGhvZC5pbml0KFxuXHRcdHtcblx0XHRcdGlkOiB7XG5cdFx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG5cdFx0XHRcdGFsbG93TnVsbDogZmFsc2UsXG5cdFx0XHRcdHByaW1hcnlLZXk6IHRydWVcblx0XHRcdH0sXG5cdFx0XHRpc1JlY292ZXJ5QWN0aXZlOiB7XG5cdFx0XHRcdHR5cGU6IERhdGFUeXBlcy5CT09MRUFOLFxuXHRcdFx0XHRhbGxvd051bGw6IGZhbHNlLFxuXHRcdFx0XHRkZWZhdWx0VmFsdWU6IHRydWVcblx0XHRcdH0sXG5cdFx0XHRyZWNvdmVyeUlkOiB7XG5cdFx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG5cdFx0XHRcdGFsbG93TnVsbDogZmFsc2Vcblx0XHRcdH0sXG5cdFx0XHRyZWNvdmVyeU1ldGhvZDoge1xuXHRcdFx0XHR0eXBlOiBEYXRhVHlwZXMuRU5VTSgnZW1haWwnLCAnYmFja3VwQ29kZXMnKSxcblx0XHRcdFx0YWxsb3dOdWxsOiBmYWxzZVxuXHRcdFx0fSxcblx0XHRcdGJhY2t1cENvZGVzOiB7XG5cdFx0XHRcdHR5cGU6IERhdGFUeXBlcy5BUlJBWShEYXRhVHlwZXMuU1RSSU5HKSxcblx0XHRcdFx0YWxsb3dOdWxsOiB0cnVlXG5cdFx0XHR9LFxuXHRcdFx0cmVjb3ZlcnlMYXN0VXBkYXRlZDoge1xuXHRcdFx0XHR0eXBlOiBEYXRhVHlwZXMuREFURSxcblx0XHRcdFx0YWxsb3dOdWxsOiBmYWxzZSxcblx0XHRcdFx0ZGVmYXVsdFZhbHVlOiBEYXRhVHlwZXMuTk9XXG5cdFx0XHR9XG5cdFx0fSxcblx0XHR7XG5cdFx0XHRzZXF1ZWxpemUsXG5cdFx0XHR0YWJsZU5hbWU6ICdSZWNvdmVyeU1ldGhvZHMnLFxuXHRcdFx0dGltZXN0YW1wczogZmFsc2Vcblx0XHR9XG5cdCk7XG5cblx0cmV0dXJuIFJlY292ZXJ5TWV0aG9kO1xufVxuIl19
