import { NextFunction, Request, Response } from 'express';
import { BaseRouter } from './BaseRouter';
import { StaticRouterInterface } from '../index/interfaces/services';
export declare class StaticRouter extends BaseRouter implements StaticRouterInterface {
    private staticRootPath;
    private validCSSFiles;
    private validFontFiles;
    private validHTMLFiles;
    private validIconFiles;
    private validImageFiles;
    private validJSFiles;
    private validLogoFiles;
    private validMDFiles;
    private validTXTFiles;
    private validXMLFiles;
    private cssDirectory;
    private fontDirectory;
    private htmlDirectory;
    private iconDirectory;
    private imageDirectory;
    private jsDirectory;
    private logoDirectory;
    private mdDirectory;
    private txtDirectory;
    private xmlDirectory;
    private forbiddenDirectories;
    private forbiddenExtensions;
    private forbiddenFiles;
    private validDirectories;
    private validExtensions;
    private cacheTTLs;
    private constructor();
    initializeStaticRouter(): Promise<void>;
    private importRules;
    private validateConfiguration;
    handleRequest(req: Request, res: Response, next: NextFunction): Promise<void>;
    private serveStaticFile;
    private getCacheTTL;
    private getCacheKey;
    private readFileContent;
    private serveIndexFile;
    serveNotFoundPage(req: Request, res: Response, next: NextFunction): Promise<void>;
    private serveCSSFile;
    private serveHTMLFile;
    private serveIconFile;
    private serveImageFile;
    private serveJSFile;
    private serveLogoFile;
    private serveMDFile;
    private serveTXTFile;
    private serveXMLFile;
    private validateFiles;
    private setUpPeriodicValidation;
    private blockForbiddenFiles;
}
//# sourceMappingURL=StaticRouter.d.ts.map