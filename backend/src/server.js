import { __awaiter } from 'tslib';
import passport from 'passport';
import loadEnv from './config/loadEnv.js';
import {
	initializeDatabase,
	configurePassport,
	initializeIpBlacklist,
	setupHttp
} from './index.js';
import { initializeApp, app } from './config/app.js';
loadEnv();
function initializeServer() {
	return __awaiter(this, void 0, void 0, function* () {
		let sequelize = yield initializeDatabase();
		yield configurePassport(passport);
		yield initializeIpBlacklist();
		try {
			yield initializeApp(); // Initialize the app with all middlewares and routes
			// Test database connection and sync models
			try {
				yield sequelize.sync();
				console.info('Database and tables created!');
			} catch (err) {
				console.error(
					'Database Connection Test and Sync: Server error: ',
					err
				);
				throw err;
			}
			// Start HTTP2 server
			yield setupHttp(app);
		} catch (err) {
			console.error('Failed to start server: ', err);
			process.exit(1); // exit process with failure
		}
	});
}
initializeServer();
export default app;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vdHMvc2VydmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLFFBQVEsTUFBTSxVQUFVLENBQUM7QUFDaEMsT0FBTyxPQUFPLE1BQU0sa0JBQWtCLENBQUM7QUFDdkMsT0FBTyxFQUNOLGtCQUFrQixFQUNsQixpQkFBaUIsRUFDakIscUJBQXFCLEVBQ3JCLFNBQVMsRUFDVCxNQUFNLFNBQVMsQ0FBQztBQUNqQixPQUFPLEVBQUUsYUFBYSxFQUFFLEdBQUcsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUVsRCxPQUFPLEVBQUUsQ0FBQztBQUVWLFNBQWUsZ0JBQWdCOztRQUM5QixJQUFJLFNBQVMsR0FBRyxNQUFNLGtCQUFrQixFQUFFLENBQUM7UUFDM0MsTUFBTSxpQkFBaUIsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNsQyxNQUFNLHFCQUFxQixFQUFFLENBQUM7UUFFOUIsSUFBSSxDQUFDO1lBQ0osTUFBTSxhQUFhLEVBQUUsQ0FBQyxDQUFDLHFEQUFxRDtZQUU1RSwyQ0FBMkM7WUFDM0MsSUFBSSxDQUFDO2dCQUNKLE1BQU0sU0FBUyxDQUFDLElBQUksRUFBRSxDQUFDO2dCQUN2QixPQUFPLENBQUMsSUFBSSxDQUFDLDhCQUE4QixDQUFDLENBQUM7WUFDOUMsQ0FBQztZQUFDLE9BQU8sR0FBRyxFQUFFLENBQUM7Z0JBQ2QsT0FBTyxDQUFDLEtBQUssQ0FDWixtREFBbUQsRUFDbkQsR0FBRyxDQUNILENBQUM7Z0JBQ0YsTUFBTSxHQUFHLENBQUM7WUFDWCxDQUFDO1lBRUQscUJBQXFCO1lBQ3JCLE1BQU0sU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3RCLENBQUM7UUFBQyxPQUFPLEdBQUcsRUFBRSxDQUFDO1lBQ2QsT0FBTyxDQUFDLEtBQUssQ0FBQywwQkFBMEIsRUFBRSxHQUFHLENBQUMsQ0FBQztZQUMvQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsNEJBQTRCO1FBQzlDLENBQUM7SUFDRixDQUFDO0NBQUE7QUFFRCxnQkFBZ0IsRUFBRSxDQUFDO0FBRW5CLGVBQWUsR0FBRyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHBhc3Nwb3J0IGZyb20gJ3Bhc3Nwb3J0JztcbmltcG9ydCBsb2FkRW52IGZyb20gJy4vY29uZmlnL2xvYWRFbnYnO1xuaW1wb3J0IHtcblx0aW5pdGlhbGl6ZURhdGFiYXNlLFxuXHRjb25maWd1cmVQYXNzcG9ydCxcblx0aW5pdGlhbGl6ZUlwQmxhY2tsaXN0LFxuXHRzZXR1cEh0dHBcbn0gZnJvbSAnLi9pbmRleCc7XG5pbXBvcnQgeyBpbml0aWFsaXplQXBwLCBhcHAgfSBmcm9tICcuL2NvbmZpZy9hcHAnO1xuXG5sb2FkRW52KCk7XG5cbmFzeW5jIGZ1bmN0aW9uIGluaXRpYWxpemVTZXJ2ZXIoKSB7XG5cdGxldCBzZXF1ZWxpemUgPSBhd2FpdCBpbml0aWFsaXplRGF0YWJhc2UoKTtcblx0YXdhaXQgY29uZmlndXJlUGFzc3BvcnQocGFzc3BvcnQpO1xuXHRhd2FpdCBpbml0aWFsaXplSXBCbGFja2xpc3QoKTtcblxuXHR0cnkge1xuXHRcdGF3YWl0IGluaXRpYWxpemVBcHAoKTsgLy8gSW5pdGlhbGl6ZSB0aGUgYXBwIHdpdGggYWxsIG1pZGRsZXdhcmVzIGFuZCByb3V0ZXNcblxuXHRcdC8vIFRlc3QgZGF0YWJhc2UgY29ubmVjdGlvbiBhbmQgc3luYyBtb2RlbHNcblx0XHR0cnkge1xuXHRcdFx0YXdhaXQgc2VxdWVsaXplLnN5bmMoKTtcblx0XHRcdGNvbnNvbGUuaW5mbygnRGF0YWJhc2UgYW5kIHRhYmxlcyBjcmVhdGVkIScpO1xuXHRcdH0gY2F0Y2ggKGVycikge1xuXHRcdFx0Y29uc29sZS5lcnJvcihcblx0XHRcdFx0J0RhdGFiYXNlIENvbm5lY3Rpb24gVGVzdCBhbmQgU3luYzogU2VydmVyIGVycm9yOiAnLFxuXHRcdFx0XHRlcnJcblx0XHRcdCk7XG5cdFx0XHR0aHJvdyBlcnI7XG5cdFx0fVxuXG5cdFx0Ly8gU3RhcnQgSFRUUDIgc2VydmVyXG5cdFx0YXdhaXQgc2V0dXBIdHRwKGFwcCk7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBzdGFydCBzZXJ2ZXI6ICcsIGVycik7XG5cdFx0cHJvY2Vzcy5leGl0KDEpOyAvLyBleGl0IHByb2Nlc3Mgd2l0aCBmYWlsdXJlXG5cdH1cbn1cblxuaW5pdGlhbGl6ZVNlcnZlcigpO1xuXG5leHBvcnQgZGVmYXVsdCBhcHA7XG4iXX0=
