import { __awaiter } from 'tslib';
import speakeasy from 'speakeasy';
import QRCode from 'qrcode';
function generateTOTPSecret() {
	let totpSecret = speakeasy.generateSecret({ length: 20 });
	return {
		ascii: totpSecret.ascii || '',
		hex: totpSecret.hex || '',
		base32: totpSecret.base32 || '',
		otpauth_url: totpSecret.otpauth_url || ''
	};
}
function generateTOTPToken(secret) {
	let totpToken = speakeasy.totp({
		secret: secret,
		encoding: 'base32'
	});
	return totpToken;
}
function verifyTOTPToken(secret, token) {
	let isTOTPTokenValid = speakeasy.totp.verify({
		secret: secret,
		encoding: 'base32',
		token: token,
		window: 1 // gives leeway for clock drift
	});
	return isTOTPTokenValid;
}
function generateQRCode(otpauth_url) {
	return __awaiter(this, void 0, void 0, function* () {
		return yield QRCode.toDataURL(otpauth_url);
	});
}
export {
	generateTOTPSecret,
	generateTOTPToken,
	verifyTOTPToken,
	generateQRCode
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG90cFV0aWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi90cy91dGlscy9hdXRoL3RvdHBVdGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLFNBQVMsTUFBTSxXQUFXLENBQUM7QUFDbEMsT0FBTyxNQUFNLE1BQU0sUUFBUSxDQUFDO0FBUzVCLFNBQVMsa0JBQWtCO0lBQzFCLElBQUksVUFBVSxHQUFHLFNBQVMsQ0FBQyxjQUFjLENBQUMsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUMxRCxPQUFPO1FBQ04sS0FBSyxFQUFFLFVBQVUsQ0FBQyxLQUFLLElBQUksRUFBRTtRQUM3QixHQUFHLEVBQUUsVUFBVSxDQUFDLEdBQUcsSUFBSSxFQUFFO1FBQ3pCLE1BQU0sRUFBRSxVQUFVLENBQUMsTUFBTSxJQUFJLEVBQUU7UUFDL0IsV0FBVyxFQUFFLFVBQVUsQ0FBQyxXQUFXLElBQUksRUFBRTtLQUN6QyxDQUFDO0FBQ0gsQ0FBQztBQUVELFNBQVMsaUJBQWlCLENBQUMsTUFBYztJQUN4QyxJQUFJLFNBQVMsR0FBRyxTQUFTLENBQUMsSUFBSSxDQUFDO1FBQzlCLE1BQU0sRUFBRSxNQUFNO1FBQ2QsUUFBUSxFQUFFLFFBQVE7S0FDbEIsQ0FBQyxDQUFDO0lBQ0gsT0FBTyxTQUFTLENBQUM7QUFDbEIsQ0FBQztBQUVELFNBQVMsZUFBZSxDQUFDLE1BQWMsRUFBRSxLQUFhO0lBQ3JELElBQUksZ0JBQWdCLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDNUMsTUFBTSxFQUFFLE1BQU07UUFDZCxRQUFRLEVBQUUsUUFBUTtRQUNsQixLQUFLLEVBQUUsS0FBSztRQUNaLE1BQU0sRUFBRSxDQUFDLENBQUMsK0JBQStCO0tBQ3pDLENBQUMsQ0FBQztJQUNILE9BQU8sZ0JBQWdCLENBQUM7QUFDekIsQ0FBQztBQUVELFNBQWUsY0FBYyxDQUFDLFdBQW1COztRQUNoRCxPQUFPLE1BQU0sTUFBTSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUM1QyxDQUFDO0NBQUE7QUFFRCxPQUFPLEVBQ04sa0JBQWtCLEVBQ2xCLGlCQUFpQixFQUNqQixlQUFlLEVBQ2YsY0FBYyxFQUNkLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3BlYWtlYXN5IGZyb20gJ3NwZWFrZWFzeSc7XG5pbXBvcnQgUVJDb2RlIGZyb20gJ3FyY29kZSc7XG5cbmludGVyZmFjZSBUT1RQU2VjcmV0IHtcblx0YXNjaWk6IHN0cmluZztcblx0aGV4OiBzdHJpbmc7XG5cdGJhc2UzMjogc3RyaW5nO1xuXHRvdHBhdXRoX3VybDogc3RyaW5nO1xufVxuXG5mdW5jdGlvbiBnZW5lcmF0ZVRPVFBTZWNyZXQoKTogVE9UUFNlY3JldCB7XG5cdGxldCB0b3RwU2VjcmV0ID0gc3BlYWtlYXN5LmdlbmVyYXRlU2VjcmV0KHsgbGVuZ3RoOiAyMCB9KTtcblx0cmV0dXJuIHtcblx0XHRhc2NpaTogdG90cFNlY3JldC5hc2NpaSB8fCAnJyxcblx0XHRoZXg6IHRvdHBTZWNyZXQuaGV4IHx8ICcnLFxuXHRcdGJhc2UzMjogdG90cFNlY3JldC5iYXNlMzIgfHwgJycsXG5cdFx0b3RwYXV0aF91cmw6IHRvdHBTZWNyZXQub3RwYXV0aF91cmwgfHwgJydcblx0fTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGVUT1RQVG9rZW4oc2VjcmV0OiBzdHJpbmcpOiBzdHJpbmcge1xuXHRsZXQgdG90cFRva2VuID0gc3BlYWtlYXN5LnRvdHAoe1xuXHRcdHNlY3JldDogc2VjcmV0LFxuXHRcdGVuY29kaW5nOiAnYmFzZTMyJ1xuXHR9KTtcblx0cmV0dXJuIHRvdHBUb2tlbjtcbn1cblxuZnVuY3Rpb24gdmVyaWZ5VE9UUFRva2VuKHNlY3JldDogc3RyaW5nLCB0b2tlbjogc3RyaW5nKTogYm9vbGVhbiB7XG5cdGxldCBpc1RPVFBUb2tlblZhbGlkID0gc3BlYWtlYXN5LnRvdHAudmVyaWZ5KHtcblx0XHRzZWNyZXQ6IHNlY3JldCxcblx0XHRlbmNvZGluZzogJ2Jhc2UzMicsXG5cdFx0dG9rZW46IHRva2VuLFxuXHRcdHdpbmRvdzogMSAvLyBnaXZlcyBsZWV3YXkgZm9yIGNsb2NrIGRyaWZ0XG5cdH0pO1xuXHRyZXR1cm4gaXNUT1RQVG9rZW5WYWxpZDtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2VuZXJhdGVRUkNvZGUob3RwYXV0aF91cmw6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPiB7XG5cdHJldHVybiBhd2FpdCBRUkNvZGUudG9EYXRhVVJMKG90cGF1dGhfdXJsKTtcbn1cblxuZXhwb3J0IHtcblx0Z2VuZXJhdGVUT1RQU2VjcmV0LFxuXHRnZW5lcmF0ZVRPVFBUb2tlbixcblx0dmVyaWZ5VE9UUFRva2VuLFxuXHRnZW5lcmF0ZVFSQ29kZVxufTtcbiJdfQ==
