import { __awaiter } from 'tslib';
import speakeasy from 'speakeasy';
import QRCode from 'qrcode';
function generateTOTPSecret() {
	const totpSecret = speakeasy.generateSecret({ length: 20 });
	return {
		ascii: totpSecret.ascii || '',
		hex: totpSecret.hex || '',
		base32: totpSecret.base32 || '',
		otpauth_url: totpSecret.otpauth_url || ''
	};
}
function generateTOTPToken(secret) {
	const totpToken = speakeasy.totp({
		secret: secret,
		encoding: 'base32'
	});
	return totpToken;
}
function verifyTOTPToken(secret, token) {
	const isTOTPTokenValid = speakeasy.totp.verify({
		secret: secret,
		encoding: 'base32',
		token: token,
		window: 1 // gives leeway for clock drift
	});
	return isTOTPTokenValid;
}
function generateQRCode(otpauth_url) {
	return __awaiter(this, void 0, void 0, function* () {
		return yield QRCode.toDataURL(otpauth_url);
	});
}
export {
	generateTOTPSecret,
	generateTOTPToken,
	verifyTOTPToken,
	generateQRCode
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG90cFV0aWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi90cy91dGlscy9hdXRoL3RvdHBVdGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLFNBQVMsTUFBTSxXQUFXLENBQUM7QUFDbEMsT0FBTyxNQUFNLE1BQU0sUUFBUSxDQUFDO0FBUzVCLFNBQVMsa0JBQWtCO0lBQzFCLE1BQU0sVUFBVSxHQUFHLFNBQVMsQ0FBQyxjQUFjLENBQUMsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUM1RCxPQUFPO1FBQ04sS0FBSyxFQUFFLFVBQVUsQ0FBQyxLQUFLLElBQUksRUFBRTtRQUM3QixHQUFHLEVBQUUsVUFBVSxDQUFDLEdBQUcsSUFBSSxFQUFFO1FBQ3pCLE1BQU0sRUFBRSxVQUFVLENBQUMsTUFBTSxJQUFJLEVBQUU7UUFDL0IsV0FBVyxFQUFFLFVBQVUsQ0FBQyxXQUFXLElBQUksRUFBRTtLQUN6QyxDQUFDO0FBQ0gsQ0FBQztBQUVELFNBQVMsaUJBQWlCLENBQUMsTUFBYztJQUN4QyxNQUFNLFNBQVMsR0FBRyxTQUFTLENBQUMsSUFBSSxDQUFDO1FBQ2hDLE1BQU0sRUFBRSxNQUFNO1FBQ2QsUUFBUSxFQUFFLFFBQVE7S0FDbEIsQ0FBQyxDQUFDO0lBQ0gsT0FBTyxTQUFTLENBQUM7QUFDbEIsQ0FBQztBQUVELFNBQVMsZUFBZSxDQUFDLE1BQWMsRUFBRSxLQUFhO0lBQ3JELE1BQU0sZ0JBQWdCLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDOUMsTUFBTSxFQUFFLE1BQU07UUFDZCxRQUFRLEVBQUUsUUFBUTtRQUNsQixLQUFLLEVBQUUsS0FBSztRQUNaLE1BQU0sRUFBRSxDQUFDLENBQUMsK0JBQStCO0tBQ3pDLENBQUMsQ0FBQztJQUNILE9BQU8sZ0JBQWdCLENBQUM7QUFDekIsQ0FBQztBQUVELFNBQWUsY0FBYyxDQUFDLFdBQW1COztRQUNoRCxPQUFPLE1BQU0sTUFBTSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUM1QyxDQUFDO0NBQUE7QUFFRCxPQUFPLEVBQ04sa0JBQWtCLEVBQ2xCLGlCQUFpQixFQUNqQixlQUFlLEVBQ2YsY0FBYyxFQUNkLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3BlYWtlYXN5IGZyb20gJ3NwZWFrZWFzeSc7XG5pbXBvcnQgUVJDb2RlIGZyb20gJ3FyY29kZSc7XG5cbmludGVyZmFjZSBUT1RQU2VjcmV0IHtcblx0YXNjaWk6IHN0cmluZztcblx0aGV4OiBzdHJpbmc7XG5cdGJhc2UzMjogc3RyaW5nO1xuXHRvdHBhdXRoX3VybDogc3RyaW5nO1xufVxuXG5mdW5jdGlvbiBnZW5lcmF0ZVRPVFBTZWNyZXQoKTogVE9UUFNlY3JldCB7XG5cdGNvbnN0IHRvdHBTZWNyZXQgPSBzcGVha2Vhc3kuZ2VuZXJhdGVTZWNyZXQoeyBsZW5ndGg6IDIwIH0pO1xuXHRyZXR1cm4ge1xuXHRcdGFzY2lpOiB0b3RwU2VjcmV0LmFzY2lpIHx8ICcnLFxuXHRcdGhleDogdG90cFNlY3JldC5oZXggfHwgJycsXG5cdFx0YmFzZTMyOiB0b3RwU2VjcmV0LmJhc2UzMiB8fCAnJyxcblx0XHRvdHBhdXRoX3VybDogdG90cFNlY3JldC5vdHBhdXRoX3VybCB8fCAnJ1xuXHR9O1xufVxuXG5mdW5jdGlvbiBnZW5lcmF0ZVRPVFBUb2tlbihzZWNyZXQ6IHN0cmluZyk6IHN0cmluZyB7XG5cdGNvbnN0IHRvdHBUb2tlbiA9IHNwZWFrZWFzeS50b3RwKHtcblx0XHRzZWNyZXQ6IHNlY3JldCxcblx0XHRlbmNvZGluZzogJ2Jhc2UzMidcblx0fSk7XG5cdHJldHVybiB0b3RwVG9rZW47XG59XG5cbmZ1bmN0aW9uIHZlcmlmeVRPVFBUb2tlbihzZWNyZXQ6IHN0cmluZywgdG9rZW46IHN0cmluZyk6IGJvb2xlYW4ge1xuXHRjb25zdCBpc1RPVFBUb2tlblZhbGlkID0gc3BlYWtlYXN5LnRvdHAudmVyaWZ5KHtcblx0XHRzZWNyZXQ6IHNlY3JldCxcblx0XHRlbmNvZGluZzogJ2Jhc2UzMicsXG5cdFx0dG9rZW46IHRva2VuLFxuXHRcdHdpbmRvdzogMSAvLyBnaXZlcyBsZWV3YXkgZm9yIGNsb2NrIGRyaWZ0XG5cdH0pO1xuXHRyZXR1cm4gaXNUT1RQVG9rZW5WYWxpZDtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2VuZXJhdGVRUkNvZGUob3RwYXV0aF91cmw6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPiB7XG5cdHJldHVybiBhd2FpdCBRUkNvZGUudG9EYXRhVVJMKG90cGF1dGhfdXJsKTtcbn1cblxuZXhwb3J0IHtcblx0Z2VuZXJhdGVUT1RQU2VjcmV0LFxuXHRnZW5lcmF0ZVRPVFBUb2tlbixcblx0dmVyaWZ5VE9UUFRva2VuLFxuXHRnZW5lcmF0ZVFSQ29kZVxufTtcbiJdfQ==
