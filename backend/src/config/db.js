import { __awaiter } from 'tslib';
import { Sequelize } from 'sequelize';
import setupLogger from '../middleware/logger.js';
import getSecrets from './secrets.js';
let sequelize;
function initializeDatabase() {
	return __awaiter(this, void 0, void 0, function* () {
		let secrets = yield getSecrets();
		let logger = yield setupLogger();
		if (
			!secrets.DB_NAME ||
			!secrets.DB_USER ||
			!secrets.DB_PASSWORD ||
			!secrets.DB_HOST
		) {
			throw new Error('Missing database configuration in secrets.');
		}
		sequelize = new Sequelize(
			secrets.DB_NAME,
			secrets.DB_USER,
			secrets.DB_PASSWORD,
			{
				host: secrets.DB_HOST,
				dialect: secrets.DB_DIALECT,
				logging: (msg) => logger.info(msg)
			}
		);
		try {
			yield sequelize.authenticate();
			logger.info('Connection has been established successfully.');
		} catch (error) {
			logger.error('Unable to connect to the database:', error);
		}
		return sequelize;
	});
}
export default initializeDatabase;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi90cy9jb25maWcvZGIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDdEMsT0FBTyxXQUFXLE1BQU0sc0JBQXNCLENBQUM7QUFDL0MsT0FBTyxVQUFVLE1BQU0sV0FBVyxDQUFDO0FBRW5DLElBQUksU0FBUyxDQUFDO0FBRWQsU0FBZSxrQkFBa0I7O1FBQ2hDLElBQUksT0FBTyxHQUFHLE1BQU0sVUFBVSxFQUFFLENBQUM7UUFDakMsSUFBSSxNQUFNLEdBQUcsTUFBTSxXQUFXLEVBQUUsQ0FBQztRQUVqQyxJQUNDLENBQUMsT0FBTyxDQUFDLE9BQU87WUFDaEIsQ0FBQyxPQUFPLENBQUMsT0FBTztZQUNoQixDQUFDLE9BQU8sQ0FBQyxXQUFXO1lBQ3BCLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFDZixDQUFDO1lBQ0YsTUFBTSxJQUFJLEtBQUssQ0FBQyw0Q0FBNEMsQ0FBQyxDQUFDO1FBQy9ELENBQUM7UUFFRCxTQUFTLEdBQUcsSUFBSSxTQUFTLENBQ3hCLE9BQU8sQ0FBQyxPQUFPLEVBQ2YsT0FBTyxDQUFDLE9BQU8sRUFDZixPQUFPLENBQUMsV0FBVyxFQUNuQjtZQUNDLElBQUksRUFBRSxPQUFPLENBQUMsT0FBTztZQUNyQixPQUFPLEVBQUUsT0FBTyxDQUFDLFVBQVU7WUFDM0IsT0FBTyxFQUFFLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQztTQUNsQyxDQUNELENBQUM7UUFFRixJQUFJLENBQUM7WUFDSixNQUFNLFNBQVMsQ0FBQyxZQUFZLEVBQUUsQ0FBQztZQUMvQixNQUFNLENBQUMsSUFBSSxDQUFDLCtDQUErQyxDQUFDLENBQUM7UUFDOUQsQ0FBQztRQUFDLE9BQU8sS0FBSyxFQUFFLENBQUM7WUFDaEIsTUFBTSxDQUFDLEtBQUssQ0FBQyxvQ0FBb0MsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUMzRCxDQUFDO1FBRUQsT0FBTyxTQUFTLENBQUM7SUFDbEIsQ0FBQztDQUFBO0FBRUQsZUFBZSxrQkFBa0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNlcXVlbGl6ZSB9IGZyb20gJ3NlcXVlbGl6ZSc7XG5pbXBvcnQgc2V0dXBMb2dnZXIgZnJvbSAnLi4vbWlkZGxld2FyZS9sb2dnZXInO1xuaW1wb3J0IGdldFNlY3JldHMgZnJvbSAnLi9zZWNyZXRzJztcblxubGV0IHNlcXVlbGl6ZTtcblxuYXN5bmMgZnVuY3Rpb24gaW5pdGlhbGl6ZURhdGFiYXNlKCkge1xuXHRsZXQgc2VjcmV0cyA9IGF3YWl0IGdldFNlY3JldHMoKTtcblx0bGV0IGxvZ2dlciA9IGF3YWl0IHNldHVwTG9nZ2VyKCk7XG5cblx0aWYgKFxuXHRcdCFzZWNyZXRzLkRCX05BTUUgfHxcblx0XHQhc2VjcmV0cy5EQl9VU0VSIHx8XG5cdFx0IXNlY3JldHMuREJfUEFTU1dPUkQgfHxcblx0XHQhc2VjcmV0cy5EQl9IT1NUXG5cdCkge1xuXHRcdHRocm93IG5ldyBFcnJvcignTWlzc2luZyBkYXRhYmFzZSBjb25maWd1cmF0aW9uIGluIHNlY3JldHMuJyk7XG5cdH1cblxuXHRzZXF1ZWxpemUgPSBuZXcgU2VxdWVsaXplKFxuXHRcdHNlY3JldHMuREJfTkFNRSxcblx0XHRzZWNyZXRzLkRCX1VTRVIsXG5cdFx0c2VjcmV0cy5EQl9QQVNTV09SRCxcblx0XHR7XG5cdFx0XHRob3N0OiBzZWNyZXRzLkRCX0hPU1QsXG5cdFx0XHRkaWFsZWN0OiBzZWNyZXRzLkRCX0RJQUxFQ1QsXG5cdFx0XHRsb2dnaW5nOiAobXNnKSA9PiBsb2dnZXIuaW5mbyhtc2cpXG5cdFx0fVxuXHQpO1xuXG5cdHRyeSB7XG5cdFx0YXdhaXQgc2VxdWVsaXplLmF1dGhlbnRpY2F0ZSgpO1xuXHRcdGxvZ2dlci5pbmZvKCdDb25uZWN0aW9uIGhhcyBiZWVuIGVzdGFibGlzaGVkIHN1Y2Nlc3NmdWxseS4nKTtcblx0fSBjYXRjaCAoZXJyb3IpIHtcblx0XHRsb2dnZXIuZXJyb3IoJ1VuYWJsZSB0byBjb25uZWN0IHRvIHRoZSBkYXRhYmFzZTonLCBlcnJvcik7XG5cdH1cblxuXHRyZXR1cm4gc2VxdWVsaXplO1xufVxuXG5leHBvcnQgZGVmYXVsdCBpbml0aWFsaXplRGF0YWJhc2U7XG4iXX0=
