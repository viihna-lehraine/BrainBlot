server {
    listen 80;
    server_name rontend.guestbook;

    # redirect all HTTP traffic to HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
	http2 on;
    server_name frontend.guestbook;

    # SSL certificate and key
    ssl_certificate /etc/nginx/ssl/guestbook-nginx-test.crt;
    ssl_certificate_key /etc/nginx/ssl/guestbook-nginx-test.key;

    # SSL settings
    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout 15m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305';
    ssl_prefer_server_ciphers on;

    # add HSTS header for security
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # proxy pass for the backend application (guestbook-server)
    location / {
        proxy_pass http://guestbook-server:3000;  # Proxy to backend server
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # serve static files from the frontend build
    location /static/ {
        alias /app/frontend/public/;  # Path to frontend static files
        expires 30d;  # Optional: Set caching policy for static files
    }

    # log settings
    error_log /app/nginx/logs/nginx-error.log notice;
    access_log /app/nginx/logs/nginx-access.log main;

    # enable gzip compression
    gzip on;
    gzip_types text/plain application/json application/javascript text/css application/xml text/javascript;
    gzip_proxied any;
    gzip_min_length 256;
}
